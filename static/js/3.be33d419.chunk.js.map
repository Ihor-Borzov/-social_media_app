{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileDataForm.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileData.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js","HOC/withMatchIdUrl.js"],"names":["module","exports","SocialMediaLinksThumbnails","facebook","instagram","youtube","website","github","Contact","contactValue","contactTitle","href","target","rel","src","alt","ProfileData","props","className","s","fullName","userProfile","aboutMe","lookingForAJob","style","color","JobDescription","lookingForAJobDescription","item_social","Object","keys","contacts","map","key","hasOwnProperty","isOwner","editButton","onClick","setEditMode","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","profileDataForm","error","createField","Input","TextArea","type","contact_item","buttons","submitButton","discardButton","ProfileStatusHooks","useState","editMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onBlur","updateStatus","onChange","e","ProfileInfo","imageDomElement","React","createRef","aboutUser","wrapper","errorFlag","userImgWrapper","ref","isFetching","Preloader","photos","large","blankUserPicture","photoUpload","inputFile","files","length","savePhoto","changeUsersPhoto","profileStatus","userInfo","initialValues","profileData","saveProfile","then","catch","data","console","log","Post","item","pick","receivedText","message","likes","maximumChar","maxChar","MyPostsReduxForm","post","Field","name","component","validate","required","placeholder","addPostButton","MyPosts","displayedPosts","state","postsData","postObject","myPosts","addPost","myPostText","posts","MyPostsContainer","connect","myPostsPage","dispatch","text","addPostAndCleanReduxForm","Profile","content","ProfileContainer","refreshProfile","userId","match","isNaN","params","authorizedId","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","to","Component","compose","isAuth","auth","id","useMatch"],"mappings":"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","file":"static/js/3.be33d419.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutUser\":\"ProfileInfo_aboutUser__m_JrV\",\"wrapper\":\"ProfileInfo_wrapper__3HMwr\",\"userImgWrapper\":\"ProfileInfo_userImgWrapper__3ewxk\",\"photoUpload\":\"ProfileInfo_photoUpload__26i6Y\",\"inputFile\":\"ProfileInfo_inputFile__2LEOq\",\"profileStatus\":\"ProfileInfo_profileStatus__3U1HC\",\"userInfo\":\"ProfileInfo_userInfo__2z2Q-\",\"editButton\":\"ProfileInfo_editButton___LMnb\",\"fullName\":\"ProfileInfo_fullName__1VaUt\",\"aboutMe\":\"ProfileInfo_aboutMe__128uz\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__1nDc6\",\"JobDescription\":\"ProfileInfo_JobDescription__26Nsg\",\"item_social\":\"ProfileInfo_item_social__1alaM\",\"error\":\"ProfileInfo_error__zZOLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2ZW2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDataForm\":\"ProfileDataForm_profileDataForm__2QzaJ\",\"lookingForAJob\":\"ProfileDataForm_lookingForAJob__3U0U-\",\"contacts\":\"ProfileDataForm_contacts__g_BqR\",\"contact_item\":\"ProfileDataForm_contact_item__9Jqug\",\"buttons\":\"ProfileDataForm_buttons__Uq9s6\",\"submitButton\":\"ProfileDataForm_submitButton__1iMTA\",\"discardButton\":\"ProfileDataForm_discardButton__GbmcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3A-t5\",\"addPostButton\":\"MyPosts_addPostButton__TZN9U\",\"post\":\"MyPosts_post__1hiE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2LN1y\",\"pick\":\"Post_pick__3KbtI\",\"receivedText\":\"Post_receivedText__3NaxA\"};","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nexport const SocialMediaLinksThumbnails = {\r\n    facebook: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/2021_Facebook_icon.svg/800px-2021_Facebook_icon.svg.png\",\r\n    instagram: \"https://tbrsteakhouse.com/wp-content/uploads/2018/11/instagram-colourful-icon.png\",\r\n    youtube: \"https://cdn3.iconfinder.com/data/icons/2018-social-media-logotypes/1000/2018_social_media_popular_app_logo_youtube-512.png\",\r\n    website: \"http://cdn.onlinewebfonts.com/svg/img_504359.png\",\r\n    github: \"https://cdn-icons-png.flaticon.com/512/25/25231.png\",\r\n}\r\n\r\n\r\n\r\n\r\nfunction ProfileData(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.fullName} > {props.userProfile.fullName}</div>\r\n            <div className={s.aboutMe}>  <div>{props.userProfile.aboutMe}</div>  </div>\r\n\r\n            <div className={s.lookingForAJob}>Looking for a job: {props.userProfile.lookingForAJob ?\r\n                <span style={{ color: \"green\" }}>yes</span> : <span>no</span>}  </div>\r\n\r\n            <div className={s.JobDescription}> {props.userProfile.lookingForAJobDescription ?\r\n                `my professional skills: ${props.userProfile.lookingForAJobDescription} ` : null}</div>\r\n\r\n\r\n\r\n            <ul className={s.item_social}><b>Contacts : </b>\r\n                {Object.keys(props.userProfile.contacts).map((key) => {\r\n                    if (props.userProfile.contacts[key] && SocialMediaLinksThumbnails.hasOwnProperty(key))\r\n                    // if the property is not empty and this property value exist in the SocialMediaLinksThumbnails object => i will render it\r\n                    {\r\n                        return (\r\n                            <Contact key={key} contactTitle={key} contactValue={props.userProfile.contacts[key]} />)\r\n                    }\r\n                    return null\r\n                })}\r\n            </ul>\r\n\r\n            {props.isOwner && <button className={s.editButton} onClick={() => { props.setEditMode(true) }} >Edit</button>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Contact = ({ contactValue, contactTitle }) => {\r\n\r\n    return (\r\n        <li>\r\n            <a href={contactValue} target=\"_blank\" rel=\"noreferrer\">\r\n                <img src={SocialMediaLinksThumbnails[contactTitle]} alt=\"social media links\" />\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileData","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, TextArea } from '../../common/FormControls/FormControls';\r\nimport { SocialMediaLinksThumbnails } from './ProfileData';\r\nimport s from \"./ProfileDataForm.module.css\";\r\n\r\n\r\n\r\n\r\nexport const ProfileDataForm = (props) => {\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit} className={s.profileDataForm}>\r\n\r\n            {props.error && <div style={{ color: 'red' }}    > {props.error}</div>}\r\n\r\n            <div>{createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n\r\n            <div>{createField(\"About me\", \"aboutMe\", [], TextArea)}</div>\r\n\r\n            <div className={s.lookingForAJob}>Looking for a job: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })} </div>\r\n\r\n            <div>{createField(\"My professional skills\", \"lookingForAJobDescription\", [], TextArea)} </div>\r\n\r\n            <ul className={s.contacts}><b>Contacts : </b>\r\n                {Object.keys(props.userProfile.contacts).map((key) => {\r\n                    if (SocialMediaLinksThumbnails[key]) {  //! this is the way to render only links I want. (if that property exists in the SocialMediaLinksThumbnails => i render it, if not => then I do not)\r\n                        return (\r\n                            <div className={s.contact_item} key={key} >{createField(`${key}`, `contacts.${key}`, [], Input)}\r\n                            </div>)\r\n\r\n                    }\r\n                    return null\r\n                })}\r\n            </ul>\r\n\r\n            <div className={s.buttons}>\r\n                <button className={s.submitButton}>Submit</button>\r\n                <div className={s.discardButton} onClick={() => { props.setEditMode(false) }} >Discard changes</div>\r\n            </div>\r\n\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: 'profileDataA' })(ProfileDataForm)\r\nexport default ProfileDataReduxForm","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => { setStatus(props.status) }, [props.status])\r\n\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n                <span onDoubleClick={activateEditMode}>{props.status ? `Status : ${props.status}` : \"-----\"}</span>\r\n            }\r\n\r\n            {editMode &&\r\n                <textarea autoFocus={true} value={status} onBlur={deactivateEditMode} onChange={onStatusChange}></textarea>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusHooks\r\n\r\n","import React, { useState } from 'react';\r\nimport blankUserPicture from '../../../assets/images/user.jpg';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileData from './ProfileData';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\n\r\n\r\n\r\n\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let imageDomElement = React.createRef()\r\n\r\n\r\n\r\n\r\n    let changeUsersPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    let onSubmit = (profileData) => {\r\n        props.saveProfile(profileData).then(() => { setEditMode(false) })   //Only when form submitted and Promise resolved => we change our flag to false \r\n            .catch((data) => { console.log(data) })\r\n\r\n    }\r\n\r\n\r\n    if (!props.userProfile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.aboutUser}>\r\n            <div className={s.wrapper}>\r\n\r\n                {props.errorFlag && <div className={s.error}>An error occurred in data fetching</div>}\r\n\r\n                <div className={s.userImgWrapper} ref={imageDomElement} >\r\n                    {props.isFetching ? <Preloader />\r\n                        : <img src={props.userProfile.photos.large != null ? props.userProfile.photos.large : blankUserPicture} alt=\"avatar\" ></img>}\r\n\r\n\r\n                    {props.isOwner &&\r\n                        <label className={s.photoUpload}     >\r\n                            <input className={s.inputFile} type={\"file\"} onChange={(e) => { changeUsersPhoto(e) }}   ></input>\r\n                        </label>\r\n                    }\r\n                </div>\r\n\r\n\r\n                <div className={s.profileStatus} >  <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />    </div>\r\n\r\n                <div className={s.userInfo}>\r\n                    {editMode ? <ProfileDataForm  {...props} initialValues={props.userProfile} onSubmit={onSubmit} setEditMode={setEditMode} />\r\n                        : <ProfileData {...props} setEditMode={setEditMode} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\n\r\n\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.pick}>\r\n                <img src=\"https://partycity6.scene7.com/is/image/PartyCity/_pdp_sq_?$_500x500_$&$product=PartyCity/P880795\" alt=\"Post\" />\r\n            </div>\r\n\r\n            <div className={s.receivedText}>\r\n                {props.message}                      {/* this is the way we use JavaScript in JSX language, you required to put it in curled brackets */}\r\n            </div>\r\n            <div><span>{\"LIKES  \" + props.likes}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxChar, required } from '../../../Utilities/FormValidators/validators';\r\nimport { TextArea } from '../../common/FormControls/FormControls';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\n\r\nfunction MyPosts(props) {\r\n\r\n    let displayedPosts = props.state.postsData.map((postObject) => <Post likes={postObject.likes} key={postObject.likes} message={postObject.message} />)\r\n\r\n\r\n\r\n    let onAddPost = (data) => {\r\n        props.addPost(data.myPostText);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <div>\r\n                <MyPostsReduxForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {displayedPosts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nlet maximumChar = maxChar(300) /* this is our flexible validator with closure, for now we have to invoke it this way */\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.post}>\r\n                <Field name=\"myPostText\" component={TextArea} validate={[required, maximumChar]}\r\n                    placeholder=\"your comment here\"> </Field>\r\n            </div>\r\n            <button className={s.addPostButton} >Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: \"NewPost\" })(MyPostsForm)\r\n\r\nexport default MyPosts","import { connect } from 'react-redux';\r\nimport { addPostAndCleanReduxForm } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.myPostsPage,\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => { dispatch(addPostAndCleanReduxForm(text)) },\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\n\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className={s.content}>  {/* this is the way you encapsulate css: s- means your css class is in an object, and you call your className from the object, where s - is an object (separate for each component if you named css file with the word .module.) and body is a key in an object; and value for the key body is some complicated class name automatically generated by the object   */}\r\n            <ProfileInfo {...props} />\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { withMatchIdUrl } from '../../HOC/withMatchIdUrl'\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from '../../Redux/profile-reducer'\r\nimport Profile from './Profile'\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n\r\n        let userId\r\n        if (!this.props.match || isNaN(this.props.match.params.userId)) {\r\n            userId = this.props.authorizedId ? this.props.authorizedId : null\r\n        }\r\n        else { userId = this.props.match.params.userId }\r\n\r\n        if (userId) {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.refreshProfile();\r\n    }\r\n\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (this.props.match) {   // if user url exists => rerender might happen\r\n            if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n                this.refreshProfile();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render = () => {\r\n        if (this.props.authorizedId === null && (this.props.match.params.userId === \"null\" ||\r\n            isNaN(this.props.match.params.userId))) { return (<Navigate to=\"/login\" />) }\r\n\r\n\r\n        return (\r\n\r\n            <Profile {...this.props} isOwner={+this.props.match.params.userId === this.props.authorizedId} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.myPostsPage.userProfile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.myPostsPage.status,\r\n        authorizedId: state.auth.id,\r\n        isFetching: state.myPostsPage.isFetching,\r\n        errorFlag: state.myPostsPage.errorFlag\r\n    }\r\n\r\n}\r\n\r\n\r\n/* this is the way i did before compose  */\r\n// let ProfileMatchComponent = withMatchIdUrl(ProfileContainer);\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileMatchComponent);\r\n// export default connect(mapStateToProps,{getUserProfile})(AuthRedirectComponent);\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    // withAuthRedirect,\r\n    withMatchIdUrl\r\n)(ProfileContainer);\r\n\r\n","import React from \"react\"\r\nimport { useMatch } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport const withMatchIdUrl = (Component) => {\r\n\r\n    let ProfileMatchComponent = (props) => {\r\n        let match = useMatch(\"/profile/:userId\");  //here specifying that after slash we may have useeId - we will be able to extract it later from the variable match\r\n        return (\r\n            <Component {...props} match={match} />\r\n        )\r\n    }\r\n\r\n    return ProfileMatchComponent\r\n}\r\n\r\n\r\n// I made this HOC component because we can not use hooks in the Class component and our ProfileContainer is a class\r\n//component - so we have to create HOC, which will get needed us data from url and then will render that component based\r\n// of that url (the Id  of the user)"],"sourceRoot":""}