{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileDataForm.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileData.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js","HOC/withMatchIdUrl.js"],"names":["module","exports","SocialMediaLinksThumbnails","facebook","instagram","youtube","website","github","Contact","contactValue","contactTitle","href","target","rel","src","alt","ProfileData","props","className","s","fullName","userProfile","aboutMe","lookingForAJob","style","color","JobDescription","lookingForAJobDescription","item_social","Object","keys","contacts","map","key","console","log","isOwner","editButton","onClick","setEditMode","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","profileDataForm","error","createField","Input","TextArea","type","contact_item","buttons","submitButton","discardButton","ProfileStatusHooks","useState","editMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onBlur","updateStatus","onChange","e","ProfileInfo","setIsHovering","imageDomElement","React","createRef","handleMouseOut","setTimeout","aboutUser","wrapper","errorFlag","userImgWrapper","ref","isFetching","Preloader","photos","large","blankUserPicture","photoUpload","inputFile","files","length","savePhoto","changeUsersPhoto","current","removeEventListener","profileStatus","userInfo","initialValues","profileData","saveProfile","then","catch","data","Post","item","pick","receivedText","message","likes","maximumChar","maxChar","MyPostsReduxForm","Field","name","component","validate","required","placeholder","MyPosts","displayedPosts","state","postsData","postObject","myPosts","addPost","myPostText","posts","MyPostsContainer","connect","myPostsPage","dispatch","text","addNewPostCreator","Profile","content","ProfileContainer","refreshProfile","userId","match","isNaN","params","authorizedId","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","to","Component","compose","isAuth","auth","id","useMatch"],"mappings":"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","file":"static/js/3.7c178dbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutUser\":\"ProfileInfo_aboutUser__m_JrV\",\"wrapper\":\"ProfileInfo_wrapper__3HMwr\",\"userImgWrapper\":\"ProfileInfo_userImgWrapper__3ewxk\",\"photoUpload\":\"ProfileInfo_photoUpload__26i6Y\",\"inputFile\":\"ProfileInfo_inputFile__2LEOq\",\"profileStatus\":\"ProfileInfo_profileStatus__3U1HC\",\"userInfo\":\"ProfileInfo_userInfo__2z2Q-\",\"editButton\":\"ProfileInfo_editButton___LMnb\",\"fullName\":\"ProfileInfo_fullName__1VaUt\",\"aboutMe\":\"ProfileInfo_aboutMe__128uz\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__1nDc6\",\"JobDescription\":\"ProfileInfo_JobDescription__26Nsg\",\"item_social\":\"ProfileInfo_item_social__1alaM\",\"error\":\"ProfileInfo_error__zZOLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2ZW2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDataForm\":\"ProfileDataForm_profileDataForm__2QzaJ\",\"lookingForAJob\":\"ProfileDataForm_lookingForAJob__3U0U-\",\"contacts\":\"ProfileDataForm_contacts__g_BqR\",\"contact_item\":\"ProfileDataForm_contact_item__9Jqug\",\"buttons\":\"ProfileDataForm_buttons__Uq9s6\",\"submitButton\":\"ProfileDataForm_submitButton__1iMTA\",\"discardButton\":\"ProfileDataForm_discardButton__GbmcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3A-t5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2LN1y\",\"pick\":\"Post_pick__3KbtI\",\"receivedText\":\"Post_receivedText__3NaxA\"};","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nexport const SocialMediaLinksThumbnails = {\r\n    facebook: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/2021_Facebook_icon.svg/800px-2021_Facebook_icon.svg.png\",\r\n    instagram: \"https://tbrsteakhouse.com/wp-content/uploads/2018/11/instagram-colourful-icon.png\",\r\n    youtube: \"https://cdn.icon-icons.com/icons2/1907/PNG/512/iconfinder-youtube-4555888_121363.png\",\r\n    website: \"http://cdn.onlinewebfonts.com/svg/img_504359.png\",\r\n    github: \"https://cdn-icons-png.flaticon.com/512/25/25231.png\",\r\n}\r\n\r\n\r\n\r\n\r\nfunction ProfileData(props) {\r\n\r\n    return ( \r\n        <div>\r\n            <div className={s.fullName} > {props.userProfile.fullName}</div>\r\n            <div className={s.aboutMe}>  <div>{props.userProfile.aboutMe}</div>  </div>\r\n\r\n            <div className={s.lookingForAJob}>Looking for a job: {props.userProfile.lookingForAJob ?\r\n             <span style={{color:\"green\"}}>yes</span> : <span>no</span>}  </div>\r\n\r\n            <div className={s.JobDescription}> {props.userProfile.lookingForAJobDescription ?\r\n                `my professional skills: ${props.userProfile.lookingForAJobDescription} ` : null}</div>\r\n\r\n\r\n\r\n            <ul className={s.item_social}><b>Contacts : </b>\r\n                {Object.keys(props.userProfile.contacts).map((key) => {\r\n                    if (props.userProfile.contacts[key]) {   // if the property is not empty => i will render it\r\n                        console.log(props.userProfile.contacts[key])\r\n                        return (\r\n                            <Contact key={key} contactTitle={key} contactValue={props.userProfile.contacts[key]} />)\r\n                    }\r\n                    return null\r\n                })}\r\n            </ul>\r\n\r\n            {props.isOwner && <button className={s.editButton} onClick={() => { props.setEditMode(true) }} >Edit</button>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Contact = ({ contactValue, contactTitle }) => {\r\n\r\n    return (\r\n        <li>\r\n            <a href={contactValue} target=\"_blank\" rel=\"noreferrer\">\r\n                <img src={SocialMediaLinksThumbnails[contactTitle]}  alt=\"social media links\" />\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileData","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, TextArea } from '../../common/FormControls/FormControls';\r\nimport { SocialMediaLinksThumbnails } from './ProfileData';\r\nimport s from \"./ProfileDataForm.module.css\";\r\n\r\n\r\n\r\n\r\nexport const ProfileDataForm = (props) => {\r\n\r\n    return (\r\n \r\n        <form onSubmit={props.handleSubmit} className={s.profileDataForm}>\r\n\r\n            {props.error && <div style={{ color: 'red' }}    > {props.error}</div>}\r\n\r\n            <div>{createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n\r\n            <div>{createField(\"About me\", \"aboutMe\", [], TextArea)}</div>\r\n\r\n            <div className={s.lookingForAJob}>Looking for a job: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })} </div>\r\n\r\n            <div>{createField(\"My professional skills\", \"lookingForAJobDescription\", [], TextArea)} </div>\r\n\r\n            <ul className={s.contacts}><b>Contacts : </b>\r\n                {Object.keys(props.userProfile.contacts).map((key) => {\r\n                    if (SocialMediaLinksThumbnails[key]) {  //! this is the way to render only links I want. (if that property exists in the SocialMediaLinksThumbnails => i render it, if not => then I do not)\r\n                        return (\r\n                            <div className={s.contact_item} key={key} >{createField(`${key}`, `contacts.${key}`, [], Input)}\r\n                            </div>)\r\n\r\n                    }\r\n                    return null\r\n                })}\r\n            </ul>\r\n\r\n<div className={s.buttons}>\r\n<button className={s.submitButton}>Submit</button>  \r\n<div className={s.discardButton} onClick={() => { props.setEditMode(false) }} >Discard changes</div>\r\n</div>\r\n\r\n\r\n        </form>\r\n     \r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: 'profileDataA' })(ProfileDataForm)\r\nexport default ProfileDataReduxForm","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => { setStatus(props.status) }, [props.status])\r\n\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={setEditMode.status}>\r\n            {!editMode &&\r\n                <span onDoubleClick={activateEditMode}>{props.status ? `Status : ${props.status}` : \"-----\"}</span>\r\n            }\r\n\r\n            {editMode &&\r\n                <input autoFocus={true} value={status} onBlur={deactivateEditMode} onChange={onStatusChange}></input>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusHooks\r\n\r\n","import React, { useState } from 'react';\r\nimport blankUserPicture from '../../../assets/images/user.jpg';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileData from './ProfileData';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\n\r\n\r\n\r\n\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n     let [isHovering, setIsHovering] = useState(false) \r\n    let [editMode, setEditMode] = useState(false)\r\n    let imageDomElement = React.createRef()\r\n\r\n\r\n    let removeOnMouseOut = () => {\r\n        console.log(\"remove listener\")\r\n        imageDomElement.current.removeEventListener('mouseout', handleMouseOut)\r\n    }\r\n\r\n\r\n    let handleMouseOut = () => {\r\n        setTimeout(() => {\r\n            console.log(\"mouse out\")\r\n            setIsHovering(false)\r\n        }, 3000)\r\n\r\n    }\r\n\r\n     let handleMouseOver = () => {\r\n        setIsHovering(true);\r\n    } \r\n\r\n\r\n    let changeUsersPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    let onSubmit = (profileData) => {\r\n        props.saveProfile(profileData).then(() => { setEditMode(false) })   //Only when form submitted and Promise resolved => we change our flag to false \r\n            .catch((data) => { console.log(data) })\r\n\r\n    }\r\n\r\n\r\n    if (!props.userProfile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.aboutUser}>\r\n<div className={s.wrapper}>\r\n\r\n            { props.errorFlag  && <div className={s.error}>An error occurred in data fetching</div>}\r\n\r\n            <div className={s.userImgWrapper} /* onMouseOver={handleMouseOver} onMouseOut={handleMouseOut} */ ref={imageDomElement} >\r\n                {props.isFetching ? <Preloader /> \r\n                : <img src={props.userProfile.photos.large != null ? props.userProfile.photos.large : blankUserPicture} alt=\"avatar\" ></img>}\r\n\r\n\r\n                {  /* isHovering && */  props.isOwner &&\r\n                    <label className={s.photoUpload}     >\r\n                        <input className={s.inputFile} type={\"file\"} onChange={(e) => { changeUsersPhoto(e) }} onClick={removeOnMouseOut}   ></input>\r\n                    </label>\r\n                }\r\n            </div>\r\n\r\n\r\n            <div className={s.profileStatus} >  <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />    </div>\r\n\r\n<div className={s.userInfo}>\r\n            {editMode ? <ProfileDataForm  {...props} initialValues={props.userProfile} onSubmit={onSubmit}  setEditMode={setEditMode}/> \r\n            : <ProfileData {...props} setEditMode={setEditMode} />}\r\n</div>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\n\r\n\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.pick}>\r\n                <img src=\"https://partycity6.scene7.com/is/image/PartyCity/_pdp_sq_?$_500x500_$&$product=PartyCity/P880795\" alt=\"Post\" />\r\n            </div>\r\n\r\n            <div className={s.receivedText}>\r\n                {props.message}                      {/* this is the way we use JavaScript in JSX language, you required to put it in curled brackets */}\r\n            </div>\r\n            <div><span>{\"LIKES  \" + props.likes}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxChar, required } from '../../../Utilities/FormValidators/validators';\r\nimport { TextArea } from '../../common/FormControls/FormControls';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\n\r\nfunction MyPosts(props) {\r\n\r\n    let displayedPosts = props.state.postsData.map((postObject) => <Post likes={postObject.likes} key={postObject.likes} message={postObject.message} />)\r\n\r\n    let onAddPost = (data) => {\r\n        props.addPost(data.myPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <div>\r\n                <MyPostsReduxForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {displayedPosts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nlet maximumChar = maxChar(10) /* this is our flexible validator with closure, for now we have to invoke it this way */\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>  <Field name=\"myPostText\" component={TextArea} validate={[required, maximumChar]}\r\n             placeholder=\"your comment here\"></Field>   </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: \"NewPost\" })(MyPostsForm)\r\n\r\nexport default MyPosts","import { connect } from 'react-redux';\r\nimport { addNewPostCreator, } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        state :state.myPostsPage,\r\n    }\r\n    }\r\n    \r\n    \r\n    let mapDispatchToProps=(dispatch)=>{\r\n        return{\r\n           \r\n            addPost:(text)=>{dispatch(addNewPostCreator(text));},\r\n        }\r\n    }\r\n    \r\n    \r\n    const MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n    \r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\n\r\n\r\nfunction Profile (props){\r\n    return(\r\n<div className={s.content}>  {/* this is the way you encapsulate css: s- means your css class is in an object, and you call your className from the object, where s - is an object (separate for each component if you named css file with the word .module.) and body is a key in an object; and value for the key body is some complicated class name automatically generated by the object   */}\r\n<ProfileInfo {...props} />\r\n<MyPostsContainer />\r\n\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { withMatchIdUrl } from '../../HOC/withMatchIdUrl'\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from '../../Redux/profile-reducer'\r\nimport Profile from './Profile'\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    refreshProfile=()=>{\r\nlet userId \r\n    if( !this.props.match || isNaN(this.props.match.params.userId)){\r\n        userId = this.props.authorizedId? this.props.authorizedId: null}\r\n    else { userId=this.props.match.params.userId}\r\n\r\n    if(userId){ \r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId); \r\n    }\r\n}\r\n\r\n\r\n\r\ncomponentDidMount=()=>{\r\n       this.refreshProfile();\r\n}\r\n\r\n\r\ncomponentDidUpdate=(prevProps, prevState,snapshot)=>{\r\n    if(this.props.match){   // if user url exists => rerender might happen\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n    render=()=>{\r\nif(this.props.authorizedId === null &&  (this.props.match.params.userId === \"null\" ||\r\n isNaN(this.props.match.params.userId))   ){return (<Navigate to=\"/login\"/>) }\r\n\r\n\r\nreturn(\r\n   \r\n<Profile {...this.props}    isOwner = { +this.props.match.params.userId === this.props.authorizedId}  />\r\n)\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps =(state)=>{\r\n    return{\r\n        userProfile : state.myPostsPage.userProfile,\r\n        isAuth : state.auth.isAuth,\r\n        status: state.myPostsPage.status,\r\n        authorizedId:state.auth.id,\r\n        isFetching: state.myPostsPage.isFetching,\r\n        errorFlag:state.myPostsPage.errorFlag\r\n    }\r\n\r\n}\r\n\r\n\r\n/* this is the way i did before compose  */\r\n// let ProfileMatchComponent = withMatchIdUrl(ProfileContainer);\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileMatchComponent);\r\n// export default connect(mapStateToProps,{getUserProfile})(AuthRedirectComponent);\r\n\r\n\r\n\r\n\r\n export default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  // withAuthRedirect,\r\n    withMatchIdUrl\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//25361\r\n//25497\r\n","import React from \"react\"\r\nimport { useMatch } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport const withMatchIdUrl = (Component)=>{\r\n\r\n    let ProfileMatchComponent = (props)=>{\r\n        let match = useMatch(\"/profile/:userId\");  //here specifying that after slash we may have useeId - we will be able to extract it later from the variable match\r\n        return(\r\n            <Component {...props} match={match} />\r\n        )}\r\n\r\nreturn ProfileMatchComponent\r\n}\r\n\r\n\r\n// I made this HOC component because we can not use hooks in the Class component and our ProfileContainer is a class \r\n//component - so we have to create HOC, which will get needed us data from url and then will render that component based\r\n// of that url (the Id  of the user)"],"sourceRoot":""}