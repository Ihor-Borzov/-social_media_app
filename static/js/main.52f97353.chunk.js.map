{"version":3,"sources":["Components/Nav-bar/Nav_bar.module.css","Components/common/preloader/Preloader.jsx","assets/images/user.jpg","Redux/dialogs-reducer.js","api/api.js","Components/Music/Music.jsx","Components/Nav-bar/Friend/Friend.jsx","Redux/Auth.js","Redux/header-reducer.js","Components/Nav-bar/Nav_bar.jsx","Components/News/News.jsx","Components/Settings/Settings.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.js","Components/Login/Login.jsx","Redux/user-selector.js","Redux/users-reducer.js","Components/Users/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","Components/Users/UsersContainer.js","Redux/app-reduces.js","Redux/sidebar-reducer.js","Redux/redux-store.js","App.js","reportWebVitals.js","index.js","Components/Login/Login.module.css","Components/common/FormControls/FormControls.js","Utilities/FormValidators/validators.js","Redux/profile-reducer.js","assets/images/loader.gif","Components/Nav-bar/Friend/Friend.module.css","Components/Header/Header.module.css","Components/common/FormControls/FormControls.module.css","Components/Users/Users.module.css"],"names":["module","exports","Preloader","props","className","s","imgWrap","src","preloadGif","alt","SEND_USER_MESSAGE","initialState","dialogsData","id","name","messagesData","message","userInputMessage","SendMessageThunk","data","dispatch","type","sendUserMessageCreator","reset","dialogsReducer","state","action","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","follow","userId","post","resultCode","unfollow","delete","profileAPI","getUserProfile","getStatus","setStatus","status","put","savePhoto","photo","formData","FormData","append","saveProfile","profileData","authenticationAPI","authenticate","login","getCaptchaUrl","logout","Music","content","Friend","friend","circle","picture","friends_name","SET_USERS_DATA","GET_CAPTCHA_URL_SUCCESS","email","password","rememberMe","isAuth","captchaUrl","authorizationAC","getCaptchaUrlSuccess","payload","a","url","logoutThunk","authReducer","OPEN_CLOSE_HAMBURGER_MENU","CLOSE_HAMBURGER_MENU","hamburgerMenu","headerReducer","connect","navBarPage","authorizedId","auth","onOffBurgerMenu","header","closeHamburgerMenuAC","displayFriends","friendData","map","friendsObject","nav_bar","noBar","item","to","onClick","navData","isActive","activeLink","notActiveLink","another","logOut","logIn","MyFriends","BestFriends","friends","News","Settings","Header","header__burger_active","header__burger","openCloseHamburgerMenuAC","HeaderContainer","componentDidMount","render","React","Component","Login","componentDidUpdate","onSubmit","loginThunk","LoginReduxForm","maximumChar","maxChar","reduxForm","form","handleSubmit","loginForm","wrapper","Field","placeholder","component","Input","validate","required","error","commonError","loginButton","createField","LoginConnect","console","log","stopSubmit","_error","messages","getUsersSuperReselector","createSelector","usersPage","users","getPageSize","getUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollow_unfollowUserIds","following_unfollowingIds","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","photos","small","large","followed","location","city","country","portionSize","setUsers","setTotalUsersCount","newTotalUsersCount","toggleIsFetching","toggleIsFollowingProgress","check","usersReducer","u","page","filter","ids","Paginator","setCurrentPage","totalPagesCount","Math","ceil","totalPortionsCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagesArray","i","push","style","pageNumbers","buttonPrev","e","activePage","notActivePage","buttonNext","User","user","ussers_container","usser_icon","wrapper__for_AspectRatio","imgAspectRatio_wrapper","img_wrapper","userThumbnail","button_wrapper","disabled","some","user_info","name_and_status","country_and_city","Users","UsersContainerComponent","this","dataResponse","items","totalCount","followSuccess","unfollowSuccess","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","myPostsPage","profileReducer","fromReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","ProfileContainer","lazy","DialogsContainer","App","catchAllUnhandledErrors","reason","promise","showGlobalError","initializeApp","addEventListener","componentWillUnmount","removeEventListener","basename","process","path","element","Suspense","fallback","exact","UsersContainer","ConnectAppContainer","BaseAppComponent","StrictMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","input","otherProps","FormControl","TextArea","meta","children","touched","formControle","validators","text","value","max","length","ADD_NEW_POST","SET_USER_PROFILE","SET_STATUS","REMOVE_POST","SAVE_PHOTO_SUCCESS","FETCHING_USER_PICTURE","SET_GLOBAL_ERROR","postsData","likes","userProfile","errorFlag","isFetchingAC","fetch","setGlobalError","addPostAndCleanReduxForm","addNewPostCreator","setTimeout","updateStatus","alert","file","getState","Promise","reject","p"],"mappings":";wFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,UAAY,2BAA2B,KAAO,sBAAsB,MAAQ,uBAAuB,WAAa,4BAA4B,cAAgB,+BAA+B,OAAS,wBAAwB,MAAQ,uBAAuB,QAAU,yBAAyB,YAAc,+B,iCCDhY,0CAaeC,IATC,SAACC,GAEb,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SACI,qBAAKC,IAAKC,IAAYC,IAAI,kB,iCCRvB,QAA0B,kC,8FCEnCC,EAAoB,oBAKtBC,EAAe,CACfC,YAAa,CACT,CAAEC,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,WAGnBC,aAAc,CACV,CAAEF,GAAI,EAAGG,QAAS,MAClB,CAAEH,GAAI,EAAGG,QAAS,mBAClB,CAAEH,GAAI,EAAGG,QAAS,mBAClB,CAAEH,GAAI,EAAGG,QAAS,oBAGtBC,iBAAiB,IAsCRC,EAAkB,SAACC,GAC5B,OAAM,SAACC,GACHA,EAV8B,SAACD,GACnC,MAAM,CACVE,KAAKX,EACLS,QAOiBG,CAAuBH,IAChCC,EAASG,YAAM,kBAKRC,IAjCQ,WAAiC,IAAhCC,EAA+B,uDAAvBd,EAAce,EAAS,uCAEvD,OAAOA,EAAOL,OAETX,EACD,2BAAUe,GAAV,IAAkBV,aAAa,GAAD,mBAAKU,EAAMV,cAAX,CAAyB,CAAEF,GAAG,EAAGG,QAAQU,EAAOP,QAASF,iBAAiB,KAE7FQ,I,wHC5Cf,mHAIME,EAJN,OAIiBC,EAAMC,OAAQ,CAC/BC,QAAQ,gDACRC,iBAAgB,EAChBC,QAAQ,CAAC,UAAU,0CAMNC,EAAW,CAExBC,SAAS,WAA8B,IAA7BC,EAA4B,uDAAhB,EAAGC,EAAa,uDAAJ,EAC9B,OACAT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAC/CE,MAAK,SAACC,GACH,OACRA,EAASpB,SAMTqB,OAAO,SAACC,GACJ,OACId,EAASe,KAAT,iBAAwBD,IACvBH,MAAK,SAACC,GACH,OACIA,EAASpB,KAAKwB,eAQ9BC,SAAS,SAACH,GACN,OACId,EAASkB,OAAT,iBAA0BJ,IACzBH,MAAK,SAACC,GACH,OACIA,EAASpB,KAAKwB,gBAajBG,EAAa,CACtBC,eAAiB,SAACN,GACd,OACId,EAASU,IAAT,mBAAyBI,IAAUH,MAAK,SAACC,GACrC,OACIA,EAASpB,SAM7B6B,UAAU,SAACP,GACP,OACId,EAASU,IAAI,kBAAmBI,IAIxCQ,UAAU,SAACC,GACP,OAASvB,EAASwB,IAAI,iBAAkB,CAACD,YAK7CE,UAAU,SAACC,GACX,IAAMC,EAAW,IAAIC,SAGjB,OAFJD,EAASE,OAAO,QAASH,GAEZ1B,EAASwB,IAAI,gBAAiBG,EAAU,CAACtB,QAAQ,CAAC,eAAe,0BAI9EyB,YAAc,SAACC,GACX,OAAO/B,EAASwB,IAAI,UAAWO,KAYtBC,EAAoB,CAEjCC,aAAa,WACT,OACIjC,EAASU,IAAI,YAAYC,MAAK,SAACC,GAC3B,OACIA,EAASpB,SAQzB0C,MAAM,SAAC1C,GACH,OACIQ,EAASe,KAAK,cAAcvB,IAGhC2C,cAAc,WACV,OACInC,EAASU,IAAI,8BAMrB0B,OAAO,WACH,OACIpC,EAASkB,OAAO,kB,2MCvHbmB,MARf,SAAgB7D,GAChB,OACI,qBAAKC,UAAWC,IAAE4D,QAAlB,oB,yBCaWC,MAVf,SAAgB/D,GAEZ,OACI,sBAAKC,UAAWC,IAAE8D,OAAlB,UACI,qBAAK/D,UAAWC,IAAE+D,OAAlB,SAA0B,qBAAK7D,IAAKJ,EAAMkE,QAAS5D,IAAI,sBACvD,sBAAML,UAAWC,IAAEiE,aAAnB,SAAkCnE,EAAMW,W,iECV9CyD,EAAiB,iBACjBC,EAA0B,+BAI5B7D,EAAe,CACfE,GAAI,KACJgD,MAAO,KACPY,MAAO,KACPC,SAAU,KACVC,YAAY,EACZC,QAAQ,EACRC,WAAY,MA+BLC,EAAkB,SAACjE,EAAI4D,EAAOZ,EAAOe,GAAa,MAAQ,CAAEvD,KAAMkD,EAAgBpD,KAAM,CAAEN,KAAI4D,QAAOZ,QAAOe,YAC5GG,EAAuB,SAACF,GAAiB,MAAQ,CAAExD,KAAMmD,EAAyBQ,QAAS,CAAEH,gBAS3FjB,EAAe,WACxB,OACI,SAACxC,GACG,OACIuC,IAAkBC,eAAetB,MAAK,SAACC,GACnC,GAA4B,IAAxBA,EAASI,WAAkB,CAC3B,MAA2BJ,EAASpB,KAA9BN,EAAN,EAAMA,GAAI4D,EAAV,EAAUA,MAAOZ,EAAjB,EAAiBA,MACjBzC,EAAS0D,EAAgBjE,EAAI4D,EAAOZ,GAAO,SAExCzC,EAAS0D,EAAgB,KAAM,KAAM,MAAM,SAgCzDhB,EAAgB,WACzB,8CAAQ,WAAO1C,GAAP,iBAAA6D,EAAA,sEACiBtB,IAAkBG,gBADnC,OACAvB,EADA,OAEAsC,EAAatC,EAASpB,KAAK+D,IAC/B9D,EAAS2D,EAAqBF,IAH1B,2CAAR,uDAQSM,EAAc,WACvB,OACI,SAAC/D,GACGuC,IAAkBI,SAASzB,MAAK,SAACC,GACI,IAA7BA,EAASpB,KAAKwB,YACdvB,EAASwC,UAYdwB,EAvGK,WAAmC,IAAlC3D,EAAiC,uDAAzBd,EAAce,EAAW,uCAClD,OAAQA,EAAOL,MACX,KAAKkD,EACD9C,EAAK,2BACEA,GACAC,EAAOP,MAIlB,KAAKqD,EACD,OAAO,2BACA/C,GACAC,EAAOsD,SAIlB,QAAS,OAAOvD,ICpClB4D,EAA4B,4BAC5BC,EAAuB,uBAIzB3E,EAAe,CACnB4E,eAAgB,GA+BDC,EA3BO,WAAiC,IAAhC/D,EAA+B,uDAAvBd,EAAce,EAAS,uCAEtD,OAAOA,EAAOL,MACV,KAAKgE,EACL,kCAAU5D,GAAV,IAAkB8D,eAAiB9D,EAAM8D,gBAEzC,KAAKD,EACD,kCAAU7D,GAAV,IAAiB8D,eAAe,IAGpC,QAAS,OAAO9D,ICsCpB,IAWegE,eAXO,SAAChE,GACrB,MAAO,CACLA,MAAOA,EAAMiE,WACbC,aAAclE,EAAMmE,KAAK/E,GACzB+D,OAAQnD,EAAMmE,KAAKhB,OACff,MAAOpC,EAAMmE,KAAK/B,MAClBgC,gBAAiBpE,EAAMqE,OAAOP,iBAKE,CAACJ,cAAaY,qBDrClB,WAChC,MAAO,CAAC1E,KAAMiE,EAAsBN,SAAS,KCoClCS,EA3Df,SAAiBtF,GAEf,IAAI6F,EAAiB7F,EAAMsB,MAAMwE,WAAWC,KAAI,SAACC,GAAD,OAC/C,cAAC,EAAD,CAAQ9B,QAAS8B,EAAc9B,QAAgCvD,KAAMqF,EAAcrF,MAAtCqF,EAActF,OAG5D,OACE,sBAAKT,UAAWD,EAAM0F,gBAAiBxF,IAAE+F,QAAU/F,IAAEgG,MAArD,UAGE,qBAAKjG,UAAWC,IAAEiG,KAAlB,SAAwB,cAAC,IAAD,CAAMC,GAAI,YAAcpG,EAAMwF,aAAca,QAASrG,EAAM4F,qBAClF3F,UAAW,SAAAqG,GAAO,OAAIA,EAAQC,SAAWrG,IAAEsG,WAAatG,IAAEuG,eADnC,uBAH1B,OAME,qBAAKxG,UAAS,UAAKC,IAAEiG,KAAP,YAAejG,IAAEwG,SAA/B,SAA0C,cAAC,IAAD,CAAMN,GAAG,WAAYC,QAASrG,EAAM4F,qBAC7E3F,UAAW,SAAAqG,GAAO,OAAIA,EAAQC,SAAWrG,IAAEsG,WAAatG,IAAEuG,eADjB,wBAN5C,KASE,qBAAKxG,UAAWC,IAAEiG,KAAlB,SAAwB,cAAC,IAAD,CAAMC,GAAG,SAAWC,QAASrG,EAAM4F,qBAC3D3F,UAAW,SAAAqG,GAAO,OAAIA,EAAQC,SAAWrG,IAAEsG,WAAatG,IAAEuG,eADlC,qBAGxB,sBAAKxG,UAAWC,IAAEiG,KAAlB,cAAyB,cAAC,IAAD,CAAMC,GAAG,YAAaC,QAASrG,EAAM4F,qBAC9D3F,UAAW,SAAAqG,GAAO,OAAIA,EAAQC,SAAWrG,IAAEsG,WAAatG,IAAEuG,eADjC,sBAAzB,OAGN,qBAAKxG,UAAWC,IAAEiG,KAAlB,SACGnG,EAAMyE,OACN,qBAAKxE,UAAWC,IAAEyG,OAASN,QAAS,WAAKrG,EAAMgF,cAAehF,EAAM4F,wBAApE,SACD,cAAC,IAAD,CAASQ,GAAI,SAAb,sBAGD,qBAAKnG,UAAWC,IAAE0G,MAAOP,QAASrG,EAAM4F,qBAAxC,SACC,cAAC,IAAD,CAASQ,GAAI,SAAb,uBAMF,sBAAKnG,UAAWC,IAAE2G,UAAlB,UACM,qBAAK5G,UAAWC,IAAE4G,YAAlB,0BACA,qBAAK7G,UAAWC,IAAE6G,QAAlB,SACGlB,a,kBCrCMmB,MARf,SAAehH,GACf,OACI,qBAAKC,UAAWC,IAAE4D,QAAlB,mB,kBCMWmD,MARf,SAAmBjH,GACnB,OACI,qBAAKC,UAAWC,IAAE4D,QAAlB,uB,0BCkBWoD,MAhBf,SAAiBlH,GAEb,OACJ,sBAAKC,UAAWC,IAAEyF,OAAlB,UACA,qBAAKvF,IAAI,+EAAgFE,IAAI,kBAI7F,sBAAKL,UAAaD,EAAM0F,gBAAiBxF,IAAEiH,sBAAwBjH,IAAEkH,eACnEf,QAASrG,EAAMqH,yBADjB,cAC4C,yBAD5C,WCPMC,E,4MACFC,kBAAoB,a,EAMpBC,OAAS,WACL,OACI,cAAC,EAAD,eAAY,EAAKxH,S,YATCyH,IAAMC,WA6BrBpC,eAXO,SAAChE,GACnB,MAAQ,CACJmD,OAAQnD,EAAMmE,KAAKhB,OACnBf,MAAOpC,EAAMmE,KAAK/B,MAClBgC,gBAAiBpE,EAAMqE,OAAOP,iBAOE,CAAEJ,cAAaqC,yBLTf,WACpC,MAAM,CAACnG,KAAMgE,KKQFI,CAAoEgC,G,yDCzB7EK,G,4MAEFC,mBAAqB,a,EAIrBC,SAAW,SAAC7G,GACR,EAAKhB,MAAM8H,WAAW9G,I,EAG1BwG,OAAS,WACL,OACI,gCACI,gDACA,qFACA,4DAHJ,KAII,iDACC,EAAKxH,MAAMyE,OAAS,cAAC,IAAD,CAAU2B,GAAI,YAAc,EAAKpG,MAAMwF,eAAmB,cAACuC,GAAD,CAAgBF,SAAU,EAAKA,SAAUnD,WAAY,EAAK1E,MAAM0E,iB,YAjB3I+C,IAAMC,WA0BtBM,GAAcC,aAAQ,IAqCpBF,GAAiBG,aAAU,CAAEC,KAAM,SAAlBD,EAnCP,SAAClI,GAEb,OACI,sBAAM6H,SAAU7H,EAAMoI,aAAcnI,UAAWC,KAAEmI,UAAjD,SACI,sBAAKpI,UAAWC,KAAEoI,QAAlB,UACA,8BAAK,cAACC,GAAA,EAAD,CAAOC,YAAY,QAAQC,UAAWC,KAAO/H,KAAK,QAAQgI,SAAU,CAACC,KAAUZ,QACpF,8BAAK,cAACO,GAAA,EAAD,CAAOC,YAAY,WAAWC,UAAWC,KAAO/H,KAAK,WAAWgI,SAAU,CAACC,KAAUZ,QAC1F,qBAAK/H,UAAWC,KAAEsE,WAAlB,SACI,kCACI,iDACI,cAAC+D,GAAA,EAAD,CAAOrH,KAAK,WAAWuH,UAAU,QAAQ9H,KAAK,oBAGzDX,EAAM6I,OAAS,sBAAK5I,UAAWC,KAAE4I,YAAlB,cAAiC9I,EAAM6I,SACvD,wBAAQ5I,UAAWC,KAAE6I,YAArB,mBAEC/I,EAAM0E,YAAc,gCACjB,qBAAKtE,IAAKJ,EAAM0E,WAAYpE,IAAI,YAC/B0I,aAAY,qBAAsB,UAAW,CAACJ,MAAWF,iBAmB7DO,GAAe3D,aAVN,SAAChE,GACnB,MAAQ,CACJmD,OAAQnD,EAAMmE,KAAKhB,OACnBC,WAAYpD,EAAMmE,KAAKf,WACvBc,aAAclE,EAAMmE,KAAK/E,MAMoB,CAAEoH,WPA7B,SAAC9G,GACvB,OACI,SAACC,GACGuC,IAAkBE,MAAM1C,GAAMmB,MAAK,SAACC,GACC,IAA7BA,EAASpB,KAAKwB,WACdvB,EAASwC,MAGTyF,QAAQC,IAAI/G,EAASpB,KAAKwB,YACO,KAA7BJ,EAASpB,KAAKwB,YACdvB,EAAS0C,KAEb1C,EAASmI,YAAW,QAAS,CAAEC,OAAQjH,EAASpB,KAAKsI,SAAS,aOZtDhE,CAAyCqC,I,oBCtExD4B,GAA0BC,cALf,SAAClI,GACrB,OAAQA,EAAMmI,UAAUC,SAI0C,SAACA,GAEvE,OADAR,QAAQC,IAAI,qBACLO,KASMC,GAAc,SAACrI,GACxB,OAAQA,EAAMmI,UAAUxH,UAGf2H,GAAgB,SAACtI,GAC1B,OAAQA,EAAMmI,UAAUI,iBAGfC,GAAiB,SAACxI,GAC3B,OAAQA,EAAMmI,UAAUzH,aAGf+H,GAAgB,SAACzI,GAC1B,OAAQA,EAAMmI,UAAUO,YAGfC,GAA2B,SAAC3I,GACrC,OAAQA,EAAMmI,UAAUS,0B,SCjCtBC,GAAS,SACTC,GAAW,WACXC,GAAY,YACZC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAA+B,+BAGjCjK,GAAe,CACfkJ,MAAO,CACH,CAAEhJ,GAAI,EAAGgK,OAAQ,CAAEC,MAAO,KAAMC,MAAO,0EAA4EC,UAAU,EAAOlK,KAAM,uBAAwBoC,OAAQ,uCAAwC+H,SAAU,CAAEC,KAAM,QAASC,QAAS,YACtP,CAAEtK,GAAI,EAAGgK,OAAQ,CAAEC,MAAO,KAAMC,MAAO,6EAA+EC,UAAU,EAAMlK,KAAM,gBAAiBoC,OAAQ,cAAe+H,SAAU,CAAEC,KAAM,SAAUC,QAAS,WACzN,CAAEtK,GAAI,EAAGgK,OAAQ,CAAEC,MAAO,KAAMC,MAAO,wGAA0GC,UAAU,EAAOlK,KAAM,aAAcoC,OAAQ,0EAA2E+H,SAAU,CAAEC,KAAM,OAAQC,QAAS,YAC5S,CAAEtK,GAAI,EAAGgK,OAAQ,CAAEC,MAAO,KAAMC,MAAO,0GAA4GC,UAAU,EAAMlK,KAAM,cAAeoC,OAAQ,mCAAoC+H,SAAU,CAAEC,KAAM,WAAYC,QAAS,kBAC3Q,CAAEtK,GAAI,EAAGgK,OAAQ,CAAEC,MAAO,KAAMC,MAAO,+EAAiFC,UAAU,EAAOlK,KAAM,aAAcoC,OAAQ,cAAe+H,SAAU,CAAEC,KAAM,YAAaC,QAAS,YAC5N,CAAEtK,GAAI,EAAGgK,OAAQ,CAAEC,MAAO,KAAMC,MAAO,8DAAgEC,UAAU,EAAMlK,KAAM,cAAeoC,OAAQ,6CAA8C+H,SAAU,CAAEC,KAAM,WAAYC,QAAS,YAG7O/I,SAAU,EACVgJ,YAAa,GACbpB,gBAAiB,GACjB7H,YAAa,EACbgI,YAAY,EACZE,yBAA0B,IA8FnBgB,GAAW,SAACxB,GACnB,MAAO,CACHxI,KAAMmJ,GAAWX,UAadyB,GAAqB,SAACC,GAC7B,MAAO,CACHlK,KAAMqJ,GAAsBa,uBAIzBC,GAAmB,SAACrB,GAC3B,MACI,CAAE9I,KAAMsJ,GAAoBR,eAKzBsB,GAA4B,SAACC,EAAO7K,GAE3C,MACI,CAAEQ,KAAMuJ,GAA8Bc,QAAO7K,OA2DtC8K,GAnLM,WAAmC,IAAlClK,EAAiC,uDAAzBd,GAAce,EAAW,uCAEnD,OAAQA,EAAOL,MAEX,KAAKiJ,GACD,OAAO,2BACA7I,GADP,IAEIoI,MAAOpI,EAAMoI,MAAM3D,KAAI,SAAA0F,GACnB,OAAIA,EAAE/K,KAAOa,EAAOe,OACT,2BAAKmJ,GAAZ,IAAeZ,UAAU,IAEfY,OAK1B,KAAKrB,GACD,OAAO,2BACA9I,GADP,IAEIoI,MAAOpI,EAAMoI,MAAM3D,KAAI,SAAA0F,GACnB,OAAIA,EAAE/K,KAAOa,EAAOe,OACT,2BAAKmJ,GAAZ,IAAeZ,UAAU,IAEfY,OAK1B,KAAKpB,GACD,OAAO,2BACA/I,GADP,IACcoI,MAAOnI,EAAOmI,QAIhC,KAAKY,GACD,OAAO,2BACAhJ,GADP,IAEIU,YAAaT,EAAOmK,OAI5B,KAAKnB,GACD,OAAO,2BACAjJ,GADP,IAEIuI,gBAAiBtI,EAAO6J,qBAIhC,KAAKZ,GACD,OAAO,2BACAlJ,GADP,IAEI0I,WAAYzI,EAAOyI,aAI3B,KAAKS,GAED,OAAO,2BACAnJ,GADP,IAEI4I,yBAA0B3I,EAAOgK,MAAP,uBAChBjK,EAAM4I,0BADU,CACgB3I,EAAOb,KAC3CY,EAAM4I,yBAAyByB,QAAO,SAACC,GAAU,OAAQA,IAAQrK,EAAOb,QAKtF,QAAS,OAAOY,I,qCC7CTuK,GA9CD,SAAC,GASX,IAT+F,IAAnFZ,EAAkF,EAAlFA,YAAYpB,EAAsE,EAAtEA,gBAAiB5H,EAAqD,EAArDA,SAAU6J,EAA2C,EAA3CA,eAAgB9J,EAA2B,EAA3BA,YAAagI,EAAc,EAAdA,WAE5E+B,EAAiBC,KAAKC,KAAKpC,EAAgB5H,GAC3CiK,EAAqBF,KAAKC,KAAKF,EAAgBd,GACnD,EAAsCkB,mBAAS,GAA/C,oBAAKC,EAAL,KAAoBC,EAApB,KACIC,GAAyBF,EAAc,GAAGnB,EAAY,EACtDsB,EAAyBH,EAAcnB,EAEvCuB,EAAW,GACPC,EAAE,EAAGA,GAAGV,EAAgBU,IAC5BD,EAAWE,KAAKD,GAQxB,OACI,sBAAKxM,UAAW0M,KAAMC,YAAtB,UACHR,EAAc,GACf,wBAAQnM,UAAW0M,KAAME,WAAaxG,QAAS,WAAKgG,EAAiBD,EAAc,IAAnF,kBAICI,EAAWb,QAAO,SAACD,GAAQ,OAAOA,GAAMY,GAAyBZ,GAAMa,KAA0BxG,KAC9F,SAAC2F,GAAQ,OAAO,sBACXrF,QAAS,SAACyG,GAAKhB,EAAeJ,IAC/BzL,UAAW+B,IAAc0J,EAAOiB,KAAMI,WAAaJ,KAAMK,cAF7C,SAGXhD,GAAchI,IAAc0J,EAAM,qBAAKtL,IAAKC,KAAYC,IAAI,cAAsBoL,OAS1FU,EAAeF,GAChB,wBAAQjM,UAAW0M,KAAMM,WAAY5G,QAAS,WAAKgG,EAAiBD,EAAc,IAAlF,sB,UCWec,GAjDJ,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAMjD,EAAiD,EAAjDA,yBAA0BzH,EAAuB,EAAvBA,SAAUJ,EAAa,EAAbA,OAEpD,OACI,sBAAKpC,UAAW0M,KAAMS,iBAAtB,UAEI,qBAAKnN,UAAW0M,KAAMU,WAAtB,SACI,sBAAKpN,UAAW0M,KAAMW,yBAAtB,UACI,qBAAKrN,UAAW0M,KAAMY,uBAAtB,SACI,qBAAKtN,UAAW0M,KAAMa,YAAtB,SACI,eAAC,IAAD,CAASpH,GAAI,YAAc+G,EAAKzM,GAAhC,UACI,qBAAKN,IAAK+M,EAAKzC,OAAOE,MAAQuC,EAAKzC,OAAOE,MAAQ6C,KAAenN,IAAI,WADzE,aAKR,sBAAKL,UAAW0M,KAAMe,eAAtB,gCACKP,EAAKtC,SACA,wBAAQ8C,SAAUzD,EAAyB0D,MAAK,SAAClN,GAAS,OAAQA,IAAOyM,EAAKzM,MAAQ2F,QAAS,WAC7F5D,EAAS0K,EAAKzM,KADhB,2BAMA,wBAAQiN,SAAUzD,EAAyB0D,MAAK,SAAClN,GAAS,OAAQA,IAAOyM,EAAKzM,MAAQ2F,QAAS,WAC7FhE,EAAO8K,EAAKzM,KADd,iCAQlB,sBAAKT,UAAW0M,KAAMkB,UAAtB,UACI,sBAAK5N,UAAW0M,KAAMmB,gBAAtB,UACI,qBAAK7N,UAAW0M,KAAMhM,KAAtB,SAA6BwM,EAAKxM,OAClC,qBAAKV,UAAW0M,KAAM5J,OAAtB,SAA+BoK,EAAKpK,OAASoK,EAAKpK,OAAS,0CAG/D,sBAAK9C,UAAW0M,KAAMoB,iBAAtB,UACI,qBAAK9N,UAAW0M,KAAM3B,QAAtB,SAAgC,0BAChC,qBAAK/K,UAAW0M,KAAM5B,KAAtB,SAA6B,iCCTlCiD,GA9BL,SAAChO,GAIP,IAHA,IAAI+L,EAAiBC,KAAKC,KAAKjM,EAAM6J,gBAAgB7J,EAAMiC,UAEvDuK,EAAW,GACPC,EAAE,EAAGA,GAAGV,EAAgBU,IAC5BD,EAAWE,KAAKD,GAIxB,OAEI,sBAAKxM,UAAW0M,KAAMrE,QAAtB,UAEI,cAAC,GAAD,CAAWuB,gBAAmB7J,EAAM6J,gBACpCoB,YAAejL,EAAMiL,YACpBhJ,SAAYjC,EAAMiC,SAAU6J,eAAkB9L,EAAM8L,eACnD9J,YAAehC,EAAMgC,YACrBgI,WAAchK,EAAMgK,aAItBhK,EAAM0J,MAAM3D,KAAI,SAAA0F,GAAK,OAAO,cAAC,GAAD,CAAmB0B,KAAQ1B,EAC3DvB,yBAA4BlK,EAAMkK,yBAA6BzH,SAAYzC,EAAMyC,SAAYJ,OAAUrC,EAAMqC,QADhEoJ,EAAE/K,WClB7CuN,G,4MAOFnC,eAAiB,SAACJ,GACd,EAAK1L,MAAM8L,eAAeJ,GAC1B,EAAK1L,MAAM+B,SAAS2J,EAAM,EAAK1L,MAAMiC,W,EAGzCuF,OAAS,WAEL,OACI,mCAGI,cAAC,GAAD,CACIsE,eAAgB,EAAKA,eACrBjC,gBAAiB,EAAK7J,MAAM6J,gBAC5B5H,SAAU,EAAKjC,MAAMiC,SACrBgJ,YAAa,EAAKjL,MAAMiL,YACxBvB,MAAO,EAAK1J,MAAM0J,MAClB1H,YAAa,EAAKhC,MAAMgC,YACxBK,OAAQ,EAAKrC,MAAMqC,OACnBI,SAAU,EAAKzC,MAAMyC,SACrB6I,0BAA2B,EAAKtL,MAAMsL,0BACtCpB,yBAA0B,EAAKlK,MAAMkK,yBACrCF,WAAc,EAAKhK,MAAMgK,gB,wDA1BzC,WACIkE,KAAKlO,MAAM+B,SAASmM,KAAKlO,MAAMgC,YAAakM,KAAKlO,MAAMiC,c,GAJzBwF,IAAMC,WAuD7BpC,gBAfO,SAAChE,GACnB,MAAO,CACHoI,MAAOH,GAAwBjI,GAC/BW,SAAU0H,GAAYrI,GACtBuI,gBAAiBD,GAActI,GAC/BU,YAAa8H,GAAexI,GAC5B0I,WAAYD,GAAczI,GAC1B4I,yBAA0BD,GAA0B3I,GACpD2J,YAAa3J,EAAMmI,UAAUwB,eAOG,CACpClJ,SJiGoB,SAACC,EAAaC,GAClC,OACI,SAAChB,GACGA,EAASoK,IAAiB,IAC1BvJ,IAASC,SAASC,EAAaC,GAC1BE,MAAK,SAAAgM,GACFlN,EAASoK,IAAiB,IAC1BpK,EAASiK,GAASiD,EAAaC,QAC/BnN,EAASkK,GAAmBgD,EAAaE,kBIxGzDhM,OJiHkB,SAACC,GACnB,OACI,SAACrB,GACGA,EAASqK,IAA0B,EAAMhJ,IACzCR,IAASO,OAAOC,GAAQH,MAAK,SAACK,GACP,IAAfA,GAAoBvB,EA5Eb,SAACqB,GACxB,MAAO,CACHpB,KAAMiJ,GAAQ7H,UA0E2BgM,CAAchM,IAC/CrB,EAASqK,IAA0B,EAAOhJ,SItHtDG,SJ8HoB,SAACH,GACrB,OACI,SAACrB,GACGA,EAASqK,IAA0B,EAAMhJ,IACzCR,IAASW,SAASH,GAAQH,MAAK,SAACK,GACT,IAAfA,GAAoBvB,EApFX,SAACqB,GAC1B,MAAO,CACHpB,KAAMkJ,GAAU9H,UAkFyBiM,CAAgBjM,IACjDrB,EAASqK,IAA0B,EAAOhJ,SInItD4I,YACAY,eJ2DwB,SAACJ,GACzB,MAAO,CACHxK,KAAMoJ,GAAkBoB,SI5D5BP,sBACAE,oBACAC,8BARWhG,CAUb2I,ICxEIO,GAAsB,sBAKxBhO,GAAe,CACnBiO,aAAY,GAsCGC,GA9BI,WAAiC,IAAhCpN,EAA+B,uDAAvBd,GAAce,EAAS,uCACnD,OAAOA,EAAOL,OACLsN,GACF,2BAAYlN,GAAZ,IACCmN,aAAY,IAIAnN,G,4BCtBhBd,GAAe,CACfsF,WAAW,CACP,CAACpF,GAAG,EAAGC,KAAK,uBAAwBuD,QAAQ,0EAC5C,CAACxD,GAAG,EAAGC,KAAK,gBAAiBuD,QAAQ,6EACrC,CAACxD,GAAG,EAAGC,KAAK,aAAcuD,QAAQ,wGAClC,CAACxD,GAAG,EAAGC,KAAK,cAAeuD,QAAQ,0GACnC,CAACxD,GAAG,EAAGC,KAAK,aAAcuD,QAAQ,+EAClC,CAACxD,GAAG,EAAGC,KAAK,cAAeuD,QAAQ,gEAU5ByK,GALQ,WAAiC,IAAhCrN,EAA+B,uDAAvBd,GAChC,OAAOc,G,oBCDHsN,GAAWC,aAAgB,CAC3BC,YAAYzN,KACZ0N,YAAYC,KACZzJ,WAAWoJ,GACXlF,UAAU+B,GACV/F,KAAKR,EACTkD,KAAK8G,KACLC,IAAIR,GACJ/I,OAASN,IAML8J,GAAQC,aAAYR,GAAUS,aAAgBC,OAGnCH,MAGfI,OAAOJ,MAAQA,GCff,IAAMK,GAAmB/H,IAAMgI,MAAK,kBAAK,iCACnCC,GAAmBjI,IAAMgI,MAAK,kBAAK,iCAEnCE,G,4MAEJC,wBAA0B,SAACC,EAAQC,GAErC,EAAK9P,MAAM+P,mB,EAGXxI,kBAAoB,WAClB,EAAKvH,MAAMgQ,gBACXT,OAAOU,iBAAiB,qBAAsB,EAAKL,0B,EAGrDM,qBAAuB,WACrBX,OAAOY,oBAAoB,qBAAsB,EAAKP,0B,EAGtDpI,OAAO,WACT,OAAI,EAAKxH,MAAMyO,YAMT,sBAAKxO,UAAU,aAAf,UACE,cAAC,EAAD,IACF,qBAAKA,UAAU,MAAf,SACE,eAAC,IAAD,CAAemQ,SAAWC,oBAA1B,sBACA,cAAC,EAAD,IACN,qBAAKpQ,UAAU,eAAf,SACG,eAAC,IAAD,WAED,cAAC,IAAD,CAAOqQ,KAAK,aAAaC,QACzB,cAAC,IAAMC,SAAP,CAAgBC,SAAY,8BAAM,0BAAlC,SACA,cAACf,GAAD,QAIA,cAAC,IAAD,CAAOY,KAAK,aAAaC,QACzB,cAAC,IAAMC,SAAP,CAAgBC,SAAY,8BAAM,0BAAlC,SACA,cAACjB,GAAD,QAKA,cAAC,IAAD,CAAOkB,OAAK,EAACJ,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUnK,GAAG,iBAf3C,OAiBD,cAAC,IAAD,CAAOkK,KAAK,UAAUC,QAAS,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAEhC,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,MAEnC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAACI,GAAD,MAEhC,cAAC,IAAD,CAAOL,KAAK,WAAWC,QAAS,cAACtH,GAAD,MAzB/B,KA2BD,cAAC,IAAD,CAAOqH,KAAK,IAAIC,QAAS,kDA3BxB,mBAXE,cAACxQ,EAAA,EAAD,K,YAlBW0H,IAAMC,WA0FpBkJ,GAAsBtL,aAPG,SAAChE,GAC5B,MAAM,CACJmN,YAAYnN,EAAM4N,IAAIT,eAKwB,CAACuB,cH7EtB,WACzB,OACI,SAAC/O,GACKA,EAASwC,KACftB,MAAK,WAAKlB,EAT4B,CAACC,KAAKsN,UGkFcuB,sBAAxCzK,CAA0DqK,IAKrEkB,GAxBQ,SAAC7Q,GACtB,OACE,cAAC,IAAM8Q,WAAP,UACJ,cAAC,IAAD,CAAU3B,MAAOA,GAAjB,SACM,cAACyB,GAAD,SCrFSG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9O,MAAK,YAAkD,IAA/C+O,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAAS/J,OACP,cAAC,GAAD,IACEgK,SAASC,eAAe,SAI5BV,M,mBCbAlR,EAAOC,QAAU,CAAC,YAAc,2BAA2B,UAAY,yBAAyB,QAAU,uBAAuB,WAAa,0BAA0B,YAAc,6B,wNCKzK4I,EAAQ,SAAC1I,GAClB,IAAM0R,EAAyB1R,EAAzB0R,MAAUC,EAAhB,YAA+B3R,EAA/B,GACA,OACI,eAAC4R,EAAD,2BAAiB5R,GAAjB,mBAA0B,iDAAW0R,GAAWC,IAAhD,WAMKE,EAAW,SAAC7R,GACrB,IAAM0R,EAAyB1R,EAAzB0R,MAAUC,EAAhB,YAA+B3R,EAA/B,GACA,OACI,eAAC4R,EAAD,2BAAiB5R,GAAjB,mBAA0B,oDAAc0R,GAAWC,IAAnD,WAMFC,EAAc,SAAC5R,GAEjB,IAAK8R,EAAkB9R,EAAlB8R,KAAMC,EAAY/R,EAAZ+R,SACPlJ,EAAQiJ,EAAKE,SAAWF,EAAKjJ,MACjC,OACI,sBAAK5I,UAAS,UAAK0M,IAAMsF,aAAX,YAA2BpJ,EAAQ8D,IAAM9D,MAAQ,IAA/D,UACI,8BACKkJ,IAEJlJ,GAAS,qCAAQiJ,EAAKjJ,aAOtBG,EAAc,SAACR,EAAa7H,EAAMuR,EAAYzJ,GAAsC,IAA3BzI,EAA0B,uDAAlB,GAAImS,EAAc,uDAAP,GACrF,OACI,gCACI,cAAC,IAAD,aAAO3J,YAAaA,EAAaC,UAAWA,EAAWE,SAAUuJ,EAAYvR,KAAMA,GAAYX,IAC9FmS,O,gCC3Cb,oEAAO,IAAMvJ,EAAU,SAACwJ,GACxB,IAAIA,EACJ,MAAO,0BAIMnK,EAAS,SAACoK,GACnB,OACI,SAACD,GACG,GAAGA,GAASA,EAAME,OAASD,EAAK,MAAQ,kCAAoCA,K,0UCNlFE,EAAe,eACfC,EAAmB,mBACnBC,EAAa,aACbC,EAAc,cACdC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAmB,mBAMrBrS,EAAe,CACfsS,UAAW,CACP,CAAEpS,GAAI,EAAGqS,MAAO,KAAMlS,QAAS,gBAC/B,CAAEH,GAAI,EAAGqS,MAAO,KAAMlS,QAAS,cAC/B,CAAEH,GAAI,EAAGqS,MAAO,KAAMlS,QAAS,oBAInCmS,YAAa,KACbjQ,OAAQ,GACRiH,YAAY,EACZiJ,WAAU,GAwEDnQ,EAAY,SAACC,GACtB,MAAO,CACH7B,KAAMuR,EACN1P,WAaKmQ,EAAe,SAACC,GACzB,MAAO,CACHjS,KAAM0R,EACNO,UAKKC,EAAiB,WAC1B,MAAM,CACFlS,KAAK2R,IAYAQ,EAA2B,SAAClB,GACrC,OAAO,SAAClR,GACJA,EA7DyB,SAACkR,GAC9B,MAAO,CACHjR,KAAMqR,EACNJ,QA0DSmB,CAAkBnB,IACnClR,EAASG,YAAM,cAMF2O,EAAkB,WAC3B,OAAO,SAAC9O,GACJA,EAASmS,KACTG,YAAW,WACPtS,EAASmS,OACX,OAIGxQ,EAAiB,SAACN,GAC3B,OACI,SAACrB,GACGA,EAASiS,GAAa,IACtBvQ,IAAWC,eAAeN,GAAQH,MAAK,SAACnB,GACpCC,EAnEL,CACHC,KAAMsR,EACNQ,YAiEgChS,IACxBC,EAASiS,GAAa,SAOzBrQ,EAAY,SAACP,GAEtB,OADA4G,QAAQC,IAAI,cAER,SAAClI,GACG0B,IAAWE,UAAUP,GAAQH,MAAK,SAACC,GAC/BnB,EAAS6B,EAAUV,EAASpB,YAO/BwS,EAAe,SAACzQ,GACzB,8CACG,WAAO9B,GAAP,SAAA6D,EAAA,+EAE0BnC,IAAWG,UAAUC,GAF/C,OAG0C,IAH1C,OAGsB/B,KAAKwB,YAAoBvB,EAAS6B,EAAUC,IAHlE,gDAMM0Q,MAAM,EAAD,IANX,yDADH,uDAaSxQ,EAAY,SAACyQ,GACtB,8CAAQ,WAAOzS,GAAP,eAAA6D,EAAA,6DACJ7D,EAASiS,GAAa,IADlB,SAEiBvQ,IAAWM,UAAUyQ,GAFtC,OAG6B,KAD7BtR,EAFA,QAGSpB,KAAKwB,aACdvB,EAASiS,GAAa,IACtBjS,GA7FqByJ,EA6FKtI,EAASpB,KAAKA,KAAK0J,OA5F9C,CACHxJ,KAAMyR,EACNjI,aAqFI,iCAxFoB,IAACA,IAwFrB,OAAR,uDAaSpH,EAAc,SAACC,GACxB,8CAAQ,WAAOtC,EAAU0S,GAAjB,iBAAA7O,EAAA,6DACAxC,EAASqR,IAAWlO,KAAK/E,GADzB,SAGiBiC,IAAWW,YAAYC,GAHxC,UAI6B,KAD7BnB,EAHA,QAISpB,KAAKwB,WAJd,gBAKAvB,EAAS2B,EAAeN,IALxB,8BAQArB,EAASmI,YAAW,eAAgB,CAAEC,OAAQjH,EAASpB,KAAKsI,SAAS,MARrE,kBASQsK,QAAQC,OAAOzR,EAASpB,KAAKsI,SAAS,KAT9C,4CAAR,yDAgBW0F,IAlMQ,WAAmC,IAAlC1N,EAAiC,uDAAzBd,EAAce,EAAW,uCAErD,OAAQA,EAAOL,MAEX,KAAKqR,EACD,OAAO,2BAAKjR,GAAZ,IAAmBwR,UAAU,GAAD,mBAAMxR,EAAMwR,WAAZ,CAAuB,CAAEpS,GAAIY,EAAMwR,UAAUR,OAAQS,MAAO,EAAGlS,QAASU,EAAO4Q,UAE/G,KAAKO,EACD,OAAO,2BACApR,GADP,IACcwR,UAAWxR,EAAMwR,UAAUnH,QAAO,SAAAmI,GAAC,OAAIA,EAAEpT,KAAOa,EAAOb,QAGzE,KAAK8R,EACD,OAAO,2BAAKlR,GAAZ,IAAmB0R,YAAazR,EAAOyR,cAE3C,KAAKP,EACD,OAAO,2BACAnR,GADP,IAEIyB,OAAQxB,EAAOwB,SAGvB,KAAK4P,EACD,OAAO,2BACArR,GADP,IAEI0R,YAAY,2BAAM1R,EAAM0R,aAAb,IAA0BtI,OAAQnJ,EAAOmJ,WAG5D,KAAKkI,EACD,OAAO,2BACAtR,GADP,IAEI0I,WAAYzI,EAAO4R,QAG3B,KAAKN,EACD,OAAO,2BACAvR,GADP,IAEI2R,WAAW3R,EAAM2R,YAGzB,QAAS,OAAO3R,K,gCCtET,QAA0B,oC,mBCCzCzB,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,aAAe,+B,mBCAjGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAiB,+BAA+B,sBAAwB,wC,mBCA1HD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,YAAc,oC,kBCAtHD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,iBAAmB,gCAAgC,WAAa,0BAA0B,yBAA2B,wCAAwC,uBAAyB,sCAAsC,YAAc,2BAA2B,eAAiB,8BAA8B,UAAY,yBAAyB,gBAAkB,+BAA+B,iBAAmB,gCAAgC,KAAO,oBAAoB,OAAS,sBAAsB,QAAU,uBAAuB,KAAO,oBAAoB,WAAa,0BAA0B,YAAc,2BAA2B,WAAa,0BAA0B,WAAa,6B","file":"static/js/main.52f97353.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Nav_bar_nav_bar__2M1PX\",\"noBar\":\"Nav_bar_noBar__fhQ7l\",\"MyFriends\":\"Nav_bar_MyFriends__2OiuZ\",\"item\":\"Nav_bar_item__32w2d\",\"login\":\"Nav_bar_login__1Pxez\",\"activeLink\":\"Nav_bar_activeLink__1ojz6\",\"notActiveLink\":\"Nav_bar_notActiveLink__3U2cx\",\"logOut\":\"Nav_bar_logOut__3Rwa8\",\"logIn\":\"Nav_bar_logIn__1P_WZ\",\"friends\":\"Nav_bar_friends__1ML5H\",\"BestFriends\":\"Nav_bar_BestFriends__1hy40\"};","import React from 'react'\r\nimport preloadGif from '../../../assets/images/loader.gif'\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    \r\n    return (\r\n        <div className={s.imgWrap}>\r\n            <img src={preloadGif} alt=\"preloader\" ></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","export default __webpack_public_path__ + \"static/media/user.974a2221.jpg\";","import {reset} from 'redux-form';\r\n\r\nconst SEND_USER_MESSAGE = \"SEND_USER_MESSAGE\"\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: \"Dimych\" },\r\n        { id: 2, name: \"Ahmed\" },\r\n        { id: 3, name: \"Pahsa\" },\r\n        { id: 4, name: \"Olya\" },\r\n        { id: 5, name: \"Vita\" },\r\n        { id: 6, name: \"Maksym\" },\r\n    ],\r\n\r\n    messagesData: [\r\n        { id: 1, message: \"hi\" },\r\n        { id: 0, message: \"koorva mach ego\" },\r\n        { id: 1, message: \"Hi how are you?\" },\r\n        { id: 0, message: \"Hi how are you?\" },\r\n    ],\r\n\r\n    userInputMessage:\"\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* lesson43.4 you have to change the reducers a little bit - instead of working with your native state\r\n you have to duplicate your native state and work and change in the reducers duplicated state, also return from\r\n your reducers should be that changed duplicated state. so connect will be able to compare those two states and if there is \r\n any difference it will rerender the page where changes happened */\r\n\r\nconst dialogsReducer = (state = initialState, action)=>{\r\n\r\nswitch(action.type){\r\n\r\ncase SEND_USER_MESSAGE:\r\n    return{...state,  messagesData:[...state.messagesData, { id:0, message:action.data,}], userInputMessage:\"\"};    /* lesson#47.3 pay attention to use square brackets, when you creating an array  */\r\n\r\ndefault:return state;\r\n    \r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const sendUserMessageCreator = (data)=>{\r\n    return{\r\ntype:SEND_USER_MESSAGE,\r\ndata\r\n    }\r\n}\r\n\r\n\r\nexport const SendMessageThunk =(data)=>{\r\n    return(dispatch)=>{\r\n        dispatch(sendUserMessageCreator(data));\r\n        dispatch(reset(\"dialogsForm\"));\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\n/* HOW REDUCER WORKS:\r\n\r\nin the component we create a function eventListener, when event happens we want to change our state! so we call props.dispatch(UpdateUserMessageCreator(text))..     remember you need UpdateUserMessageCreator been imported in the component you using it in, so component can execute that function (and that function is in dialogs-reducer.js) so that functionCreator returns an object a key {type:someType, newText:text}\r\n\r\nthe object falls in to method dispatch (which is in state.js file) this method expects to receive an object: action, then action goes in to each functionReducer (which should be imported in to state.js) so any reducer function required to receive needed peace of state and action object.\r\n\r\nin the reducer function by method switch(action.type){case type1: code; return state;}we chose what case to execute, if we found a case we change our received object STATE and return it to state.js file to method dispatch and reassign it to needed peace of state, if we did not find proper switch case - we just default return received not changed STATE\r\n\r\nthen at the end of the function dispatch we call this._callSubscriber(this.state); to rerender entire webSite. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/","import axios from \"axios\"\r\n\r\n\r\n/* we create an object for an instance.   the axios.create will automatically set the settings parameters in proper sequence for different server request  */\r\nconst instance = axios.create ({\r\nbaseURL:\"https://social-network.samuraijs.com/api/1.0/\",         /* inside we specify our baseURL */\r\nwithCredentials:true,                                            /* cookie sender request (we have to specify it manually, because of multi domain requests )*/\r\nheaders:{\"API-KEY\":\"dcee9e24-009d-463a-88e9-8f7f599b9d34\"}        /* the access key you required to write in every request you make (except get request - you do not required for get request) */\r\n})\r\n\r\n\r\n\r\n/* create an object for each component and create different methods for server requests   */\r\nexport const usersAPI = {\r\n\r\ngetUsers:(currentPage=1, pageSize=5)=>{\r\n    return(\r\n    instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    .then((response) => {\r\n        return(     \r\nresponse.data\r\n        )\r\n    })\r\n    )\r\n},\r\n\r\nfollow:(userId)=>{\r\n    return(\r\n        instance.post(`follow/${userId}`)\r\n        .then((response)=>{\r\n            return(\r\n                response.data.resultCode\r\n            )\r\n        })\r\n\r\n    )\r\n\r\n},\r\n\r\nunfollow:(userId)=>{\r\n    return(\r\n        instance.delete(`follow/${userId}`)\r\n        .then((response)=>{\r\n            return(\r\n                response.data.resultCode\r\n            )\r\n        })\r\n\r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getUserProfile : (userId)=>{\r\n        return(\r\n            instance.get(`profile/ ${userId}`).then((response)=>{\r\n                return(\r\n                    response.data\r\n                )\r\n            })\r\n        )\r\n    },\r\n\r\ngetStatus:(userId)=>{\r\n    return(\r\n        instance.get('profile/status/'+ userId)\r\n    )\r\n},\r\n\r\nsetStatus:(status)=>{\r\n    return(  instance.put('profile/status', {status} ))   //remember put and post have payload you can send to server - it is an object \r\n},\r\n\r\n\r\n//! read about \"Content-Type\":'multipart/form-data'  and how to send a file to the server\r\nsavePhoto:(photo)=>{\r\nconst formData = new FormData();\r\nformData.append(\"image\", photo)     //this is the way we create a special object, before sending the photo file to the server \r\n\r\n    return(  instance.put('profile/photo', formData, {headers:{\"Content-Type\":'multipart/form-data'}}))   \r\n},\r\n\r\n\r\nsaveProfile : (profileData)=>{\r\n    return(instance.put('profile', profileData))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const authenticationAPI = {\r\n\r\nauthenticate:()=>{\r\n    return(\r\n        instance.get(\"auth/me/\").then((response)=>{\r\n            return(\r\n                response.data\r\n            )\r\n        })\r\n    )\r\n   \r\n},\r\n\r\n\r\nlogin:(data)=>{\r\n    return(\r\n        instance.post('auth/login/',data)\r\n    )},\r\n\r\n    getCaptchaUrl:()=>{\r\n        return(\r\n            instance.get('/security/get-captcha-url')\r\n        )\r\n    },\r\n\r\n\r\n\r\n    logout:()=>{\r\n        return(\r\n            instance.delete('auth/login/')\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nfunction Music (props){\r\nreturn(\r\n    <div className={s.content}>\r\n        Music\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from \"./Friend.module.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Friend(props) {\r\n\r\n    return (\r\n        <div className={s.friend}>\r\n            <div className={s.circle}><img src={props.picture} alt=\"Friend's avatar\" /></div>\r\n            <span className={s.friends_name}>{props.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import { stopSubmit } from \"redux-form\"\r\nimport { authenticationAPI } from \"../api/api\"\r\n\r\nconst SET_USERS_DATA = 'SET_USERS_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'Auth/GET_CAPTCHA_URL_SUCCESS'\r\n\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    password: null,\r\n    rememberMe: false,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n}\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS_DATA:\r\n            state = {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n            /* falls through */  \r\n\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n            /* falls through */\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\n\r\n//   \"falls through \"  this is just the way to fix warnings about the break in switch case\r\n\r\n\r\n\r\nexport let authorizationAC = (id, email, login, isAuth) => { return ({ type: SET_USERS_DATA, data: { id, email, login, isAuth } }) }\r\nexport let getCaptchaUrlSuccess = (captchaUrl) => { return ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } }) }\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* thunk */\r\n\r\nexport const authenticate = () => {\r\n    return (\r\n        (dispatch) => {\r\n            return (\r\n                authenticationAPI.authenticate().then((response) => {\r\n                    if (response.resultCode === 0) {\r\n                        let { id, email, login } = response.data;\r\n                        dispatch(authorizationAC(id, email, login, true))  /* if response code ===0 it means we entered and we can send our isAuth to true */\r\n                    }\r\n                    else { dispatch(authorizationAC(null, null, null, false)) }\r\n                })\r\n            )  /* end of return */\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const loginThunk = (data) => {\r\n    return (\r\n        (dispatch) => {\r\n            authenticationAPI.login(data).then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(authenticate());      /* we call authenticate to update Header !*/\r\n                }\r\n                else {\r\n                    console.log(response.data.resultCode)\r\n                    if (response.data.resultCode === 10) {\r\n                        dispatch(getCaptchaUrl())\r\n                    }\r\n                    dispatch(stopSubmit(\"login\", { _error: response.data.messages[0] }))\r\n                }\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return (async (dispatch) => {\r\n        let response = await authenticationAPI.getCaptchaUrl();\r\n        let captchaUrl = response.data.url;\r\n        dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n    })\r\n}\r\n\r\n\r\nexport const logoutThunk = () => {\r\n    return (\r\n        (dispatch) => {\r\n            authenticationAPI.logout().then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(authenticate())   /* we call authenticate to update Header !*/\r\n                }\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default authReducer;","const OPEN_CLOSE_HAMBURGER_MENU = \"OPEN_CLOSE_HAMBURGER_MENU\"\r\nconst CLOSE_HAMBURGER_MENU = \"CLOSE_HAMBURGER_MENU\"\r\n\r\n\r\n\r\nlet initialState = {  \r\nhamburgerMenu : false\r\n}\r\n\r\n\r\nconst headerReducer = (state = initialState, action)=>{\r\n\r\nswitch(action.type){\r\n    case OPEN_CLOSE_HAMBURGER_MENU : \r\n    return{...state,  hamburgerMenu : !state.hamburgerMenu };\r\n\r\n    case CLOSE_HAMBURGER_MENU :\r\n        return{...state, hamburgerMenu: false};\r\n\r\n\r\n    default: return state;\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nexport const openCloseHamburgerMenuAC = () =>{\r\n    return{type: OPEN_CLOSE_HAMBURGER_MENU}\r\n}\r\n\r\nexport const closeHamburgerMenuAC = ()=>{\r\n    return {type: CLOSE_HAMBURGER_MENU, payload: false }\r\n}\r\n\r\n\r\nexport default headerReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Friend from './Friend/Friend';\r\nimport s from \"./Nav_bar.module.css\";\r\nimport {logoutThunk} from \"../../Redux/Auth\"\r\nimport {closeHamburgerMenuAC} from \"../../Redux/header-reducer\"\r\n\r\n\r\n\r\nfunction Nav_bar(props) {\r\n\r\n  let displayFriends = props.state.friendData.map((friendsObject) =>\r\n   <Friend picture={friendsObject.picture} key={friendsObject.id} name={friendsObject.name} />)\r\n\r\n\r\n  return (\r\n    <div className={props.onOffBurgerMenu? s.nav_bar : s.noBar}>\r\n      {/* this is the way to add active className */}\r\n      \r\n      <div className={s.item}><Link to={\"/profile/\" + props.authorizedId} onClick={props.closeHamburgerMenuAC}\r\n       className={navData => navData.isActive ? s.activeLink : s.notActiveLink} >Profile</Link></div>    {/* this is the way I create the links here, and they automatically link to the links  */}\r\n     \r\n      <div className={`${s.item} ${s.another}`}><Link to='/dialogs'  onClick={props.closeHamburgerMenuAC}\r\n       className={navData => navData.isActive ? s.activeLink : s.notActiveLink} >Messages</Link></div>  {/* // this is the way to use two classNames */}\r\n\r\n      <div className={s.item}><Link to=\"/users\"   onClick={props.closeHamburgerMenuAC}\r\n      className={navData => navData.isActive ? s.activeLink : s.notActiveLink} >Users</Link></div>\r\n      \r\n      <div className={s.item}> <Link to=\"/settings\"  onClick={props.closeHamburgerMenuAC}\r\n      className={navData => navData.isActive ? s.activeLink : s.notActiveLink} >Settings</Link> </div>\r\n\r\n<div className={s.item}>\r\n  {props.isAuth? \r\n   <div className={s.logOut}  onClick={()=>{props.logoutThunk(); props.closeHamburgerMenuAC()}}>\r\n  <NavLink to={'/login'}>Logout</NavLink>\r\n  </div> \r\n\r\n:<div className={s.logIn} onClick={props.closeHamburgerMenuAC} >\r\n  <NavLink to={'/login'}>Login</NavLink>\r\n  </div>}\r\n\r\n</div>\r\n      \r\n    \r\n<div className={s.MyFriends}>\r\n      <div className={s.BestFriends}>Best Friends</div>\r\n      <div className={s.friends}>\r\n        {displayFriends}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nlet mapStoreToProps = (state) => {\r\n  return {\r\n    state: state.navBarPage,\r\n    authorizedId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        onOffBurgerMenu: state.header.hamburgerMenu,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStoreToProps, {logoutThunk, closeHamburgerMenuAC})(Nav_bar);\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nfunction News (props){\r\nreturn(\r\n    <div className={s.content}>\r\n        News\r\n    </div>\r\n)\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nfunction Settings (props){\r\nreturn(\r\n    <div className={s.content}>\r\n        Settings\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport s from \"./Header.module.css\";\r\n\r\n\r\n\r\n\r\nfunction Header (props){\r\n\r\n    return(\r\n<div className={s.header}>\r\n<img src=\"https://i.pinimg.com/originals/9f/69/af/9f69af8062e69951f7527962f45e63d1.png\"  alt=\"Web page icon\"/>\r\n\r\n\r\n\r\n<div className = {props.onOffBurgerMenu? s.header__burger_active : s.header__burger}  \r\n  onClick={props.openCloseHamburgerMenuAC}> <span></span> </div> \r\n\r\n\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logoutThunk } from \"../../Redux/Auth\"\r\nimport { openCloseHamburgerMenuAC } from \"../../Redux/header-reducer\"\r\nimport Header from './Header'\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount = () => {\r\n        //this.props.authenticate();\r\n    }\r\n\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        onOffBurgerMenu: state.header.hamburgerMenu\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { logoutThunk, openCloseHamburgerMenuAC })(HeaderContainer)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { Field } from \"redux-form\"\r\nimport { loginThunk } from \"../../Redux/Auth\"\r\nimport { maxChar, required } from \"../../Utilities/FormValidators/validators\"\r\nimport { createField, Input } from \"../common/FormControls/FormControls\"\r\nimport s from \"../Login/Login.module.css\"\r\n \r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    componentDidUpdate = () => {\r\n        //alert(\"updated\")\r\n    }\r\n\r\n    onSubmit = (data) => {\r\n        this.props.loginThunk(data)\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <div>LOGIN please!</div>\r\n                <div>If you are a guest, please use next credentials:  </div>\r\n                <div>Email: free@samuraijs.com</div>  {/* my credentials: jsmesh@mail.ru  jamperxy23*/}\r\n                <div>Password: free</div>\r\n                {this.props.isAuth ? <Navigate to={\"/profile/\" + this.props.authorizedId} /> : <LoginReduxForm onSubmit={this.onSubmit} captchaUrl={this.props.captchaUrl} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nlet maximumChar = maxChar(20) /* this is our flexible validator with closure, for now we have to invoke it this way */\r\n\r\nlet LoginForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.loginForm}>\r\n            <div className={s.wrapper}>\r\n            <div><Field placeholder='email' component={Input} name=\"email\" validate={[required, maximumChar]}  ></Field></div>\r\n            <div><Field placeholder='password' component={Input} name=\"password\" validate={[required, maximumChar]}  ></Field></div>\r\n            <div className={s.rememberMe}>\r\n                <label>\r\n                    <span> remember me </span>\r\n                        <Field type=\"checkbox\" component=\"input\" name=\"rememberMe\"></Field>\r\n                </label>\r\n            </div>\r\n            {props.error && <div className={s.commonError}> {props.error}</div>}\r\n            <button className={s.loginButton}>Login</button>\r\n\r\n            {props.captchaUrl && <div>\r\n                <img src={props.captchaUrl} alt=\"captcha\" ></img>\r\n                {createField(\"symbols from image\", \"captcha\", [required], Input)}\r\n            </div>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl,\r\n        authorizedId: state.auth.id\r\n    })\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nexport const LoginConnect = connect(mapStateToProps, { loginThunk })(Login)\r\n\r\nexport default LoginConnect\r\n","import { createSelector } from \"reselect\"\r\n\r\n const getUsersSelect = (state) =>{\r\n    return (state.usersPage.users)\r\n}\r\n\r\n/* this is main reselector */\r\nexport const getUsersSuperReselector = createSelector(getUsersSelect, (users)=>{\r\nconsole.log(\"reselector worked\");\r\nreturn users\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getPageSize = (state) =>{\r\n    return (state.usersPage.pageSize)\r\n}\r\n\r\nexport const getUsersCount = (state) =>{\r\n    return (state.usersPage.totalUsersCount)\r\n}\r\n\r\nexport const getCurrentPage = (state) =>{\r\n    return (state.usersPage.currentPage)\r\n}\r\n\r\nexport const getIsFetching = (state) =>{\r\n    return (state.usersPage.isFetching)\r\n}\r\n\r\nexport const getFollow_unfollowUserIds= (state) =>{\r\n    return (state.usersPage.following_unfollowingIds)\r\n}","import { usersAPI } from \"../api/api\"\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USER_COUNT = \"SET_TOTAL_USER_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n        { id: 1, photos: { small: null, large: \"https://www.illumination.com/wp-content/uploads/2019/11/DM1_Vector.png\" }, followed: false, name: \"Vector Sohunaishvily\", status: \"I am the greatest theif of the world\", location: { city: \"Minsk\", country: \"Belarus\" } },\r\n        { id: 2, photos: { small: null, large: \"https://static.wikia.nocookie.net/heroes-and-villians/images/7/7e/Gru.png\" }, followed: true, name: \"Felonious Gru\", status: \"I am a boss\", location: { city: \"Moscow\", country: \"Russia\" } },\r\n        { id: 3, photos: { small: null, large: \"https://www.black-leatherjacket.com/image/cache/data/Dr-nefario-jacket/dr-nefario-jacket-900x900.jpg\" }, followed: false, name: \"Dr Nefario\", status: \"I am engaged in the development of the interaction of nuclear particles\", location: { city: \"Kyiv\", country: \"Ucraine\" } },\r\n        { id: 4, photos: { small: null, large: \"https://static.wikia.nocookie.net/heroes-and-villians/images/4/4c/Screenshot_2016-03-21-20-42-19-1.png\" }, followed: true, name: \"Marlena Gru\", status: \"I am the mother of Felonious Gru\", location: { city: \"New-York\", country: \"United States\" } },\r\n        { id: 5, photos: { small: null, large: \"https://static.wikia.nocookie.net/despicableme/images/0/02/Margo_Posing.png\" }, followed: false, name: \"Margo Gru \", status: \"I am a boss\", location: { city: \"Vinnytsia\", country: \"Ucraine\" } },\r\n        { id: 6, photos: { small: null, large: \"https://s3.amazonaws.com/intanibase/iad_characters/966.jpg\" }, followed: true, name: \"Mr. Perkins\", status: \"Loans, morgages and other banking services\", location: { city: \"Zacopane\", country: \"Poland\" } },\r\n    ],\r\n\r\n    pageSize: 5,\r\n    portionSize: 10,\r\n    totalUsersCount: 26,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    following_unfollowingIds: [],\r\n}\r\n\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    else { return u }\r\n                })\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    else { return u }\r\n                })\r\n            }\r\n\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users   /* each time we rewrite and reassign users */\r\n            }\r\n\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n\r\n\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.newTotalUsersCount,\r\n            }\r\n\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\r\n            return {\r\n                ...state,\r\n                following_unfollowingIds: action.check\r\n                    ? [...state.following_unfollowingIds, action.id]        /* if fallowing is processing add received userID */\r\n                    : state.following_unfollowingIds.filter((ids) => { return (ids !== action.id) })  /* if fallowing is finished remove received userID.   we do not have to do destructurisation over her, because method filter will return a new array */\r\n            }\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport let followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW, userId               /* when you do not specify the value of a property, but property name matches the receiving parameter name - then that property takes value of that parameter   */\r\n    }\r\n}\r\n\r\nexport let unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW, userId\r\n    }\r\n}\r\n\r\nexport let setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS, users\r\n    }\r\n}\r\n\r\n\r\n\r\nexport let setCurrentPage = (page) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE, page\r\n    }\r\n}\r\n\r\n\r\nexport let setTotalUsersCount = (newTotalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT, newTotalUsersCount\r\n    }\r\n}\r\n\r\nexport let toggleIsFetching = (isFetching) => {\r\n    return (\r\n        { type: TOGGLE_IS_FETCHING, isFetching }\r\n    )\r\n}\r\n\r\n\r\nexport let toggleIsFollowingProgress = (check, id) => {\r\n\r\n    return (\r\n        { type: TOGGLE_IS_FOLLOWING_PROGRESS, check, id }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (\r\n        (dispatch) => {\r\n            dispatch(toggleIsFetching(true))\r\n            usersAPI.getUsers(currentPage, pageSize)\r\n                .then(dataResponse => {\r\n                    dispatch(toggleIsFetching(false))\r\n                    dispatch(setUsers(dataResponse.items))\r\n                    dispatch(setTotalUsersCount(dataResponse.totalCount))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return (\r\n        (dispatch) => {\r\n            dispatch(toggleIsFollowingProgress(true, userId))\r\n            usersAPI.follow(userId).then((resultCode) => {\r\n                if (resultCode === 0) { dispatch(followSuccess(userId)) }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return (\r\n        (dispatch) => {\r\n            dispatch(toggleIsFollowingProgress(true, userId));\r\n            usersAPI.unfollow(userId).then((resultCode) => {\r\n                if (resultCode === 0) { dispatch(unfollowSuccess(userId)) }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport preloadGif from '../../assets/images/loader.gif'                                               //../../assets/images/loader.gif'\r\nimport style from \"./Users.module.css\"\r\n\r\n\r\nlet Paginator=({portionSize,totalUsersCount, pageSize, setCurrentPage, currentPage, isFetching})=>{\r\n\r\n    let totalPagesCount= Math.ceil(totalUsersCount/pageSize);\r\n    let totalPortionsCount = Math.ceil(totalPagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber]=useState(1);\r\n    let leftPortionPageNumber = (portionNumber-1)*portionSize+1\r\n    let rightPortionPageNumber = portionNumber*portionSize\r\n\r\n    let pagesArray=[];\r\n    for(let i=1; i<=totalPagesCount;i++){\r\n        pagesArray.push(i);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <div className={style.pageNumbers}>\r\n{portionNumber>1 &&\r\n<button className={style.buttonPrev}  onClick={()=>{setPortionNumber(portionNumber-1)}} >Prev</button>}\r\n\r\n\r\n\r\n{pagesArray.filter((page)=>{return(page>=leftPortionPageNumber && page<=rightPortionPageNumber)}).map(\r\n    (page)=>{return <span\r\n         onClick={(e)=>{setCurrentPage(page)}} \r\n        className={currentPage===page ? style.activePage : style.notActivePage}> \r\n        {isFetching && currentPage===page? <img src={preloadGif} alt=\"preloader\" ></img> : page}\r\n         </span>\r\n    })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n{portionNumber< totalPortionsCount &&\r\n<button className={style.buttonNext} onClick={()=>{setPortionNumber(portionNumber+1)}} >Next</button>}\r\n\r\n    </div> \r\n)\r\n}\r\n\r\n\r\nexport default Paginator","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userThumbnail from '../../assets/images/user.jpg';\r\nimport style from \"./Users.module.css\";\r\n\r\n\r\n\r\nlet User = ({ user, following_unfollowingIds, unfollow, follow }) => {\r\n\r\n    return (\r\n        <div className={style.ussers_container}>\r\n\r\n            <div className={style.usser_icon}>\r\n                <div className={style.wrapper__for_AspectRatio}>\r\n                    <div className={style.imgAspectRatio_wrapper}>\r\n                        <div className={style.img_wrapper}>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                                <img src={user.photos.large ? user.photos.large : userThumbnail} alt=\"avatar\" />   {/* if there is a photo use that photo if not use aa photo from import */}\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.button_wrapper}>  ....Subscribe....\r\n                        {user.followed\r\n                            ? <button disabled={following_unfollowingIds.some((id) => { return (id === user.id) })} onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>   Unfollow  </button>\r\n\r\n\r\n\r\n                            : <button disabled={following_unfollowingIds.some((id) => { return (id === user.id) })} onClick={() => {\r\n                                follow(user.id);\r\n                            }}>   follow  </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.user_info}>\r\n                <div className={style.name_and_status}>\r\n                    <div className={style.name}>{user.name}</div>\r\n                    <div className={style.status}>{user.status ? user.status : \"I am lazy and do not have a status\"}</div>\r\n\r\n                </div>\r\n                <div className={style.country_and_city}>\r\n                    <div className={style.country}>{\"user.location.country\"}</div>\r\n                    <div className={style.city}>{\"user.location.city\"}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default User\r\n","import React from 'react';\r\nimport Paginator from './Paginator';\r\nimport User from './User';\r\nimport style from \"./Users.module.css\";\r\n\r\n\r\nlet Users=(props)=>{\r\n    let totalPagesCount= Math.ceil(props.totalUsersCount/props.pageSize);   /* here we calculate how many pages we will need, Math.ceil() rounds to the bigger integer  */ \r\n\r\n    let pagesArray=[];\r\n    for(let i=1; i<=totalPagesCount;i++){\r\n        pagesArray.push(i);\r\n    }\r\n\r\n\r\nreturn(\r\n\r\n    <div className={style.wrapper}>\r\n\r\n        <Paginator totalUsersCount = {props.totalUsersCount}\r\n        portionSize = {props.portionSize}\r\n         pageSize = {props.pageSize} setCurrentPage = {props.setCurrentPage}\r\n          currentPage = {props.currentPage}\r\n          isFetching = {props.isFetching}\r\n          />\r\n\r\n\r\n    {   props.users.map(u=> {return(<User key = {u.id} user = {u}\r\n    following_unfollowingIds = {props.following_unfollowingIds}    unfollow = {props.unfollow}   follow = {props.follow}\r\n    />)})} \r\n\r\n    </div>   \r\n)\r\n}\r\n\r\n\r\nexport default Users\r\n\r\n\r\n// the specific button renders on the base of the property u.followed (aether it is follow or unfollow ) then when we press the button\r\n// this particular user id gets in to followingInProgress array in state then sends server request to subscribe or unsubscribe. While server\r\n// request is in progress we rerender our users - and we check each (follow/unfollow) button if it is in followingInProgress array - \r\n//if it means that request is still in process and button gets disabled. When server request resolved it changes user property followed \r\n// and removes user.id from the followingInProgress array - so the button changes to opposite and becomes enabled\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* my new Class component! */\r\n/* \r\n#1 You create a class and you required to extend from React.Component\r\n\r\n#2 the constructor function is invokes only first time when the component object is born, any rerendering do not invoke constructor\r\nbut invoke render() function. when you go to another component - this component object kills. and next time when you visit this \r\ncomponent it will born again.\r\n\r\n#3 by the default constructor has to pass props to the React.Component's constructor (if he does only that, then you do not have to \r\n    write constructor at all, it will happen automatically), but if you add some variables to the class object, or you want him\r\n    to do something only once when he is born, you have to write constructor, as in this sample\r\n\r\n#4 Each class requires to have render function, which requires to return jsx.\r\n\r\n#5 each additional function you want to create you have to create like this:   \r\nfunctionName = ()=>{}\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* MY OLD FUNCTIONAL COMPONENT */\r\n\r\n// let Users = (props)=>{\r\n\r\n// if (props.users.length ===6){\r\n// axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(receivedResponse => {props.setUsers(receivedResponse.data.items)})\r\n// }\r\n\r\n\r\n\r\n// //     return(      \r\n// <div className={style.wrapper}>\r\n    \r\n// {   props.users.map(u=>                                      /* so we start and finish our component with curly braces inside the main div wrapper  */\r\n\r\n// <div key={u.id} className={style.ussers_container}>          {/* first we have to give a key attribute to user wrapper (react requires) */}\r\n\r\n// <div className={style.usser_icon}>\r\n// <div className={style.wrapper__for_AspectRatio}>\r\n//    <div className={style.imgAspectRatio_wrapper}> \r\n//        <div className={style.img_wrapper}>  \r\n//            <img src={u.photos.large ?u.photos.large :user} alt=\"picture\"/>   {/* if there is a photo use that photo if not use aa photo from import */}\r\n//         </div>\r\n//     </div>\r\n//     <div className={style.button_wrapper}>  ....Subscribe.... \r\n//     {u.followed\r\n//          ? <button onClick={()=>{props.unFollow(u.id)}}>   Unfollow  </button>\r\n//          : <button onClick={()=>{props.follow(u.id)}}>   follow  </button>\r\n//         }\r\n//      </div>\r\n// </div>\r\n// </div>\r\n\r\n// <div className={style.user_info}>\r\n//     <div className={style.name_and_status}>\r\n//         <div className={style.name}>{u.name}</div>\r\n//         <div className={style.status}>{u.status}</div>\r\n    \r\n//     </div>\r\n//     <div className={style.country_and_city}>\r\n//         <div className={style.country}>{\"u.location.country\"}</div>\r\n//         <div className={style.city}>{\"u.location.city\"}</div>\r\n//     </div>\r\n// </div>\r\n\r\n// </div>\r\n\r\n// ) }\r\n// </div>\r\n// //     )\r\n// // }\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentPage, getFollow_unfollowUserIds, getIsFetching, getPageSize, getUsersCount, getUsersSuperReselector } from \"../../Redux/user-selector\";\r\nimport { follow, getUsers, setCurrentPage, setTotalUsersCount, setUsers, toggleIsFetching, toggleIsFollowingProgress, unfollow } from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\n\r\n\r\n\r\n\r\nclass UsersContainerComponent extends React.Component {\r\n    /* since we do not make a request from the constructor, and constructor only sends props to his parent constructor at React.Component, we may not write our constructor - it will do its work automatically   */\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    setCurrentPage = (page) => {\r\n        this.props.setCurrentPage(page);\r\n        this.props.getUsers(page, this.props.pageSize);\r\n    }\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <>\r\n                 {/* {this.props.isFetching ? <Preloader /> : null}  */}\r\n\r\n                <Users\r\n                    setCurrentPage={this.setCurrentPage}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    portionSize={this.props.portionSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                    following_unfollowingIds={this.props.following_unfollowingIds}\r\n                    isFetching = {this.props.isFetching}\r\n                />\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperReselector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        following_unfollowingIds: getFollow_unfollowUserIds(state),\r\n        portionSize: state.usersPage.portionSize\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getUsers,\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    toggleIsFollowingProgress,\r\n}\r\n)(UsersContainerComponent);","import { authenticate } from \"./Auth\"\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\"\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\ninitialized:false,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst appReducer = (state = initialState, action)=>{\r\nswitch(action.type){\r\n    case INITIALIZED_SUCCESS:\r\n       return({ ...state,\r\n        initialized:true,\r\n       })\r\n\r\n\r\n    default: return state\r\n}\r\n}\r\n\r\n\r\n\r\nexport const initializedSuccess = ()=>{return({type:INITIALIZED_SUCCESS})}\r\n\r\n\r\n\r\n\r\nexport const initializeApp = ()=>{\r\n    return(\r\n        (dispatch)=>{\r\nlet promise = dispatch(authenticate())  /* we have to dispatch this thunk, with dispatch method! */\r\npromise.then(()=>{dispatch(initializedSuccess())})\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default appReducer","\r\n\r\nlet initialState = {  \r\n    friendData:[\r\n        {id:1, name:\"Vector Sohunaishvily\", picture:\"https://www.illumination.com/wp-content/uploads/2019/11/DM1_Vector.png\"},\r\n        {id:2, name:\"Felonious Gru\", picture:\"https://static.wikia.nocookie.net/heroes-and-villians/images/7/7e/Gru.png\"},\r\n        {id:3, name:\"Dr Nefario\", picture:\"https://www.black-leatherjacket.com/image/cache/data/Dr-nefario-jacket/dr-nefario-jacket-900x900.jpg\"},\r\n        {id:4, name:\"Marlena Gru\", picture:\"https://static.wikia.nocookie.net/heroes-and-villians/images/4/4c/Screenshot_2016-03-21-20-42-19-1.png\"},\r\n        {id:5, name:\"Margo Gru \", picture:\"https://static.wikia.nocookie.net/despicableme/images/0/02/Margo_Posing.png\"},\r\n        {id:6, name:\"Mr. Perkins\", picture:\"https://s3.amazonaws.com/intanibase/iad_characters/966.jpg\"},\r\n    ]\r\n}\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action)=>{\r\nreturn state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","/* #1 we install Redux and create redux-store.js */\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./Auth\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as fromReducer}from 'redux-form'\r\nimport appReducer from \"./app-reduces\";\r\nimport headerReducer from \"./header-reducer\";\r\n\r\n\r\n/*#4 implemented reducers to Redux */\r\nlet reducers = combineReducers({       \r\n    dialogsPage:dialogsReducer,\r\n    myPostsPage:profileReducer,\r\n    navBarPage:sidebarReducer,\r\n    usersPage:usersReducer, \r\n    auth:authReducer,               /* it means that this part of code will be in the state like: an object usersPage and inside this object i will have things what i have in the initialState - so an array users. */\r\nform:fromReducer,\r\napp:appReducer,\r\nheader : headerReducer\r\n})\r\n\r\n\r\n\r\n/*#5 inserted reducers to store */\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware) );\r\n\r\n\r\nexport default store;\r\n\r\n\r\nwindow.store = store;","import React from 'react';\r\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Music from './Components/Music/Music';\r\nimport NavBar from './Components/Nav-bar/Nav_bar.jsx';\r\nimport News from './Components/News/News';\r\nimport Settings from './Components/Settings/Settings';\r\n\r\nimport { connect, Provider } from 'react-redux';\r\nimport Preloader from './Components/common/preloader/Preloader';\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport { LoginConnect } from './Components/Login/Login';\r\nimport UsersContainer from './Components/Users/UsersContainer';\r\nimport { initializeApp } from './Redux/app-reduces';\r\nimport { showGlobalError } from './Redux/profile-reducer';\r\nimport store from './Redux/redux-store';\r\n\r\n//import ProfileContainer from './Components/Profile/ProfileContainer';\r\n//import DialogsContainer from './Components/Dialogs/DialogsContainer';\r\nconst ProfileContainer = React.lazy(()=> import(\"./Components/Profile/ProfileContainer\"))  // the way to import components lazily\r\nconst DialogsContainer = React.lazy(()=> import(\"./Components/Dialogs/DialogsContainer\"))\r\n\r\nclass App extends React.Component {\r\n\r\n  catchAllUnhandledErrors = (reason, promise)=>{\r\n//console.log(\"the alert in App.js\"+reason)\r\nthis.props.showGlobalError()\r\n  }\r\n\r\ncomponentDidMount = ()=>{\r\n  this.props.initializeApp();\r\n  window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors) // handle any rejection from the server\r\n}\r\n\r\ncomponentWillUnmount = () =>{\r\n  window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n}\r\n\r\n  render=()=>{\r\nif(!this.props.initialized){\r\nreturn <Preloader/>\r\n}\r\n\r\n\r\n    return (\r\n      <div className=\"AppWrapper\">\r\n        <HeaderContainer/>\r\n      <div className=\"App\">\r\n        <BrowserRouter basename ={process.env.PUBLIC_URL}  >         {/* this the way we work with routing: inside our main div wrapper we create a tag <BrowserRouter> this tag we create once for an app, and then for each variant of the path we create separate attribute <Route> all the path's togethers have to be wrapped in to attribute <Routes> */}\r\n        <NavBar/>\r\n  <div className=\"body_wrapper\">\r\n     <Routes>   \r\n                                      \r\n    <Route path=\"/dialogs/*\" element={\r\n    <React.Suspense fallback = {<div>{\"React.lazy is working\"}</div>}> \r\n    <DialogsContainer />\r\n    </React.Suspense>\r\n    }/>   \r\n  \r\n    <Route path=\"/profile/*\" element={\r\n    <React.Suspense fallback = {<div>{\"React.lazy is working\"}</div>}> \r\n    <ProfileContainer/>\r\n    </React.Suspense>\r\n    }/>   \r\n\r\n\r\n    <Route exact path=\"/\" element={<Navigate to=\"/profile/*\" />}/>    {/* this is the way to render profile if your url is empty */}\r\n\r\n    <Route path=\"/news/*\" element={<News/>}/>  \r\n  \r\n    <Route path=\"/music/*\" element={<Music/>}/>  \r\n  \r\n    <Route path=\"/settings/*\" element={<Settings/>}/>  \r\n  \r\n    <Route path=\"/users/*\" element={<UsersContainer/>}/>  \r\n  \r\n    <Route path=\"/login/*\" element={<LoginConnect/>}/>  {/* this is redirect component we do not show it at the Nav-bar */}\r\n \r\n    <Route path=\"*\" element={<div>404 NOT FOUND</div>}/>   {/* this is the way to render something, when the current url does not match any path */}\r\n \r\n </Routes> \r\n  </div> \r\n  </BrowserRouter>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\n\r\n\r\n\r\nlet BaseAppComponent = (props)=>{\r\n  return(\r\n    <React.StrictMode>\r\n<Provider store={store}>       \r\n      <ConnectAppContainer />\r\n</Provider>\r\n    </React.StrictMode>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport let mapStateToProps = (state)=>{\r\n  return{\r\n    initialized:state.app.initialized\r\n  }\r\n}\r\n\r\n\r\nlet ConnectAppContainer = connect(mapStateToProps,{initializeApp, showGlobalError})(App);\r\n\r\n\r\n\r\n\r\nexport default BaseAppComponent\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BaseAppComponent from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <BaseAppComponent/>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n/*############# EVERY LESSON SUMMARY:\r\nLesson#96\r\nUploading the picture to the App\r\n - First thing is write the logic which will check if you are the owner of the page ( if you are the owner  => show the button to \r\nchange the profile picture). To upload the file there is a special <input type={\"file\"}><input>.  then write the pipeline: (thunk => \r\n  api => action creator => case in reducer => callback to the component to call thunk ) \r\n\r\nLesson#92\r\nComponent testing:\r\n- I had to move Provider and React.StrictMode to the BaseAppComponent in case to be able to test components,\r\n because I need ReactDOM.render() function to expect only one component, not the whole bunch of components. So I have to create that start \r\n component which will have Provider with the store and Browser Router... and everything what needs to run the app. And now I am able to pass\r\n just one start component BaseAppComponent when I will need to test the whale app.\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n<Provider store={store}>       \r\n<App />\r\n</Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\nLesson#83\r\nImplemented library reselect\r\nSelector is a function what expects whole global state, takes from it some piece  and returns that particular piece of state\r\nWe create primitive selector which does nothing but extracts needed us piece of state from global state. We call those selectors\r\n - dependences - because the state they extract will be determining if we will call main reselect.\r\n#2 create main reselect function with the help of createSelector() method what returns selector. That method expects dependences-\r\n(primitive selectors) and callback with main selecting logic. the callback gets in his parameters the return from each dependence selector (which is piece of state), and calculation happens on that piece of state.\r\n\r\n\r\nLESSON#80\r\nissue: when you press on the button messages and then press reload : you load the header then header make auth server request, \r\nyou load the messages, but the server request did not get back yet (it is asynchronous), so messages redirect you to the Login page - you\r\n get to the login page but then your request gets back and isAuth becams true and Login page redirects you to the Profile page. That glitch \r\n happens because of the delay of the data we receive. we rerendering pages with information, which is not full (because when we press reload\r\n  we make auth request, but auth request takes time to be executed, because it is server request) that is why first browser tries to render dialogs\r\n  then he sees that user is not authorized, because request is still going - he sends us to the login, then we receive response from server\r\n   isAuth becomes true and login page moves us to the profile.\r\nTo fix that - we have to prevent anything from rendering until we doing authentication\r\nfor that the component app will be responsible to wait and show us preloader until authentication is going - for that we have to use promises and\r\nmethod then and also set a variable \"marker\" which will get true when authentication is finished  with no matter user authorized or not\r\n(for that we have to change the marker from true to false only when all the async authentication requests finished and we received response.\r\n  just execute the function which changes the \"marker\" last in the method .then)\r\n\r\n - change functional app.js to class component\r\n - remove authorization from the HeaderContainer\r\n - create app-reducer.js\r\n - invoke authenticate function from auth-reducer in the thunk of app-reducer (initializeApp) : ror that we have to return our promise (in the authenticate\r\n   function it is the server request - so just return the whole server request)\r\n - let that request to execute and then in the method .then call another function which will change your marker  in app-reducer to true .  \r\n !!! remember each method then   returns a promise\r\n - in the app component in componentDidMount invoke initializeApp() and in the render method set if statement which will check the marker and\r\n will show the preloader in marker is false\r\n\r\n \r\n\r\n\r\nLESSON#79 how to show error from the server response\r\n- whenever you send server request to login - you  may succeed or fail depends of the data (login, password) you specified.\r\nSo if you succeed the server will return resultCode === 0 but if you failed the resultCode !=0\r\n- the response from server you receive in your thunk -  if(resultCode === 0){...}  else {you code to handle the failure}\r\n- if your component made from redux-form => you may handle the failure and show user that something is wrong by method stopSubmit()\r\n- aas the arguments you have to specify what is the name of your redux-form (you can get this name from  const LoginReduxForm = reduxForm({form:'login'})(LoginForm))\r\nand the second parameter is the Field name in your redux-form and what message you want to send to that field (the field is a tag or your upgraded\r\n  component) will receive this message in props.meta.error. \r\n  - instead of sending this info to a field you can sand it to the wholl form as a common error, for that just specify at the field name (_error)\r\n- dispatch(stopSubmit(\"login\", {_error:message}))\r\n\r\nLesson#77  Redux-Form validators:\r\n- to add a validator to redux-from first you have to  create a function Validator, this function receives input and returns undefined if everything\r\nis ok or returns a string with an error message if the value is invalid {you specify it with logic}.\r\n- then you can import your validators in to the file with your form and pass it as a parameter to attribute \"validate={[validator,]}\" to\r\nto corresponding field you want to validate. your form will automatically deny submitting if the input is invalid.\r\n- to be able to do any UI changes with the errors - you have to pass the validators not to regular attribute \"component='input'\" but you\r\nhave to create your custom component and pass everything to it <Field component={MyInput} name=\"postText\" placeholder:\"message\"/>\r\n-  MyInput will receive props which will include : input, meta, ...otherProps.   input - has validators and other functions inside itself,\r\nmeta contains all the information about this field: touched, error ... and otherProps contains placeholder and other not very important props.\r\n - all that information you have to pass to the actual tag you will be render, but you can sat css for that tag depending on the changes in \r\n your field, what validators will return. remember each time you change something redux-form rerender component.\r\n\r\n\r\nLESSON#75   REDUX-FORM\r\n- npm install redux-form\r\n- create login page with form in a separate component\r\n- import redux form reducer in to our store  (import {reducer as formReducer} from 'redux-form')\r\n         let reducers = combineReducers({reducer1:..., form:formReducer})\r\n- wrap LoginForm component into Redux-form HOC\r\n- all the input tags change to <field></field> add to each of them attribute \"component=\"input\"\" what will\r\n     specify what kind of tag you want to render, also add to each of them attribute \"name\"\r\n- set eventListener <form onSubmit={props.handleSubmit}>...</form>, and create a method onSubmit=(whichReceivesData)=>{},\r\n in a component what renders React-form HOC  and pass this method through props to React-form HOC  \r\n\r\n\r\nLESSON#73\r\nIMPORTANT: response from put request on profile/status does not return updated status - it just set it at the server but does not return it to you,\r\nin response. you have to set your global state from the argument (status) you receive to your thunk !!!\r\n\r\n- create pipeline to getStatus.; create pipeline to setStatus.\r\nthe span in Profile status has to get value fro the global state,\r\nthe input has to get the value from local state. when input onBlur he has to change the global state and change the status on the server\r\n\r\n\r\nLESSON#71  CREATING THE LOCAL STATE\r\n- the  local state you can create only for a class component. Because class component creates an object what can have some properties, \r\nand functional component you can only invoke, execute, but can not add properties\r\n- to change the state you have to use a method this.SetState - this method is asynchronous (keep that in mind, they can ask you at interview)\r\nand this method will rerender the page after changing thew local State. \r\n\r\n\r\nLESSON#69 HOC\r\n- HOC is a function, what expects an argument - component.creates the containerComponent with some functionality and the renders inner component\r\ntis way our inner component receives functionality been wrapped in a containerComponent with functionality.\r\n- HOW TO PERFORM IT?\r\n- create a function in a separate file. src->HOC->withAuthRedirect this function should expect a component as an argument and be exported,\r\n- inside the function create class component which will have needed functionality and will render received function at the end.\r\n- also if you need to get some state or dispatch use function connect inside the function withAuthRedirect and pass to connect your class component\r\n- then just return result of connect out from the function withAuthRedirect.\r\n- then at the file where you call this function withAuthRedirect you will receive : let WithRedirect = withAuthRedirect(Component)\r\n1. the class component with some props, what connect function returns: withRedirectConnectClassComponent\r\n2. inside that withRedirectConnectClassComponent we will get our HOCClassContainer what we wrote in  the function withAuthRedirect\r\n3. HOCClassContainer inside will have our component which needs to be rendered\r\n- then all this package (WithRedirect) we put in our main connect as a component.\r\nso here is the pipe line who renders whom.:\r\n-mainConnect->withRedirectConnectClassComponent->HOCClassContainer->Component\r\n\r\n- it could be more components, the one rule : you insert your HOC in the main connect and then do the render in whatever sequence you like \r\n\r\n\r\nLESSON#68   REDIRECT (NAVIGATE)\r\n- to redirect user from some page to another:  inside the functional component before return write a check\r\n- and as a result of this check render a component with tag navigate and to (path) the component you want to redirect to:\r\nif(props.isAuth===false){return<Navigate to={\"/login\"}/>}\r\n\r\n- what we did : is we get a property isAuth from auth-reducer (this property is true when we signed in and is false when we did not sign in)\r\nand send this property through mapSStateToProps to functional component. and then inside functional component before return check this property\r\nand redirect if it is false\r\n\r\nLESSON#66      THUNK\r\n- create thunk function in user-reducer.js \r\n- in to that thunk copy everything from the usersContainer=>componentDidMount\r\n - substitute all the props to dispatch.\r\n -wrap the thunk in getUsersThunkCreator - it will receive the parameters and return thunk\r\n - install middleware \"npm i redux-thunk\"\r\n import thunkMiddleware from \"redux-thunk\" in to redux-store.js file\r\n  - insert  applyMiddleware (thunkMiddleware) in redux createStore to enable to dispatch not only objects action, but also functions\r\n  -  import thunkCreator to the usersContainer and invoke it sending needed parameters to it\r\n  - in connect:\r\n  connect(stateDispatchToProps,{getUsersThunkCreator:(currentPage,PageSize)=>{dispatch(getUsersThunkCreator(currentPage,PageSize))}})\r\n  so the connect returns us a callback, when we invoke the function getUsersThunkCreator in th usersContainer we first invoke thunkCreator, it will return\r\n  us function and then we dispatch function, the function will get to dispatch and dispatch will see that this is the function, so he will \r\n  understand that this is thunk and will invoke the function dispatching all the subfunctions,  subfunctions are action creators, so we invoke them, they return \r\n  actions, actions will dispatch to reducer and change the state, component will rerender... and our thunk will continue to invoke the functions\r\n  down the road\r\n\r\n  - create thunk for render, follow, unfollow\r\n  - homework  substitute to thunk all the other axios requests\r\n\r\n\r\n\r\n\r\nLESSON#64 buttons follow/unfollow disabled during a server request to follow or unfollow\r\n- start from business logic: create an array in the initialState (following_unfollowingIds)\r\n- Think about a logic... you render your page : you have to check something to decide if you want to disable the button or not.\r\n: each time we press the button, before server request, we can set the flag property to true and add a current u.id to the \r\nfollowing_unfollowingIds in the initialState.  then the page will rerender and we can determin if we want to disable this button by checking\r\nif we have current u.id in the following_unfollowingIds - if it has - then disable the button.  Then in a stack que will go server request, after\r\n we will receive response and in the response we will change the flag to false and will remove u.id from the following_unfollowingIds, so when\r\n react will rerender the next time he will not find this u.id and will make the button available.\r\n   to check for matching id use method some(). to remove needed id use method filter() in the reducer\r\n   - create the pipeline to change the flag and add and remove users id\r\n\r\nLESSON#63\r\nENCAPSULATING SERVER REQUESTS IN TO DAL - data access layer. \r\n- create api folder. create api.js file in that folder\r\n- from UserContainer class=> method componentDidMount take axios request and move it to api.js\r\n- in the api.js create a function (call it getUsers) which will be returning axios request, export this function\r\n- import getUsers function to UsersContainer and call method then     getUsers.then\r\n- from the place where you invoke getUsers(parameters) send him all needed parameters \r\n- instead of using url each time for axios request substitute it with axios instance\r\n- put getUsers in to an object usersAPI to keep everything in order \r\n- CHECK HOW TO ENCAPSULATE SERVER REQUESTS IN api.js file\r\n\r\nLESSON#62\r\n remember you have to be logged in the dimich website, to enable cookies\r\n we have to send request been authorized to be able to use cookies. so send requests post to follow and delete to unfollow\r\n - all the server requests, except get, required to have exes key  \r\n - you have to add headers to server request. header you should write at the same object as cookie request  (our headers will be exes key)\r\n - add cookies to the server requests in UsersContainer class\r\n\r\nLESSON#61\r\n - create HeaderContainer and make axios request to authenticator end point.  \r\n  - to be able to authenticate you have to log in to DIMICH website: https://social-network.samuraijs.com  this way you save cookies in to your system\r\n  - to be able to authenticate with cookies add a second parameter to axios request {withCredentials:true}\r\n  - get from response 3 variables: id, email, login\r\n  - create the whole pipeLine to dispatch those 3 variables (create reducer, dispatch, AC, insert your reducer in to store, use it in HeaderContainer)\r\n  - in the authorization reducer initialState should be also isAuth variable to check if you authorized.\r\n  - send to the Header props and  check if you received props.login then display the name of a user. if not - just a link\r\n\r\nLESSON#60\r\n -instead of withRouter I used useMatch (it returns the same staff like withRouter) except you have to apply that function only in function component\r\n -so I had to create an function component, what will check the URL for userId (that what we specify in the arguments for the function) and then\r\n render class component.\r\n  -first executes function connect, rendering ProfileMatchComponent and then executes function ProfileMatchComponent rendering ProfileContainer\r\n  - inside class ProfileContainer we check if we received something in \"match\"  if yes we assign our userId to it, if not - we assign our userId to Dimich\r\n  id number = 2.   and then do server request with proper id address\r\n\r\nLESSON#59\r\n- created  ProfileContainer component\r\n- implement behavior: press on one of the users and it opens a user information in the ProfileInfo component (for now I do not know how to get particular user)\r\n- in the ProfileContainer component happens axios get request to get a user information. implemented a pipeLine to assign a user from server\r\nrequest to a parameter in a state: userProfile\r\n-in the ProfileInfo.js implemented alternative return (alternative rendering component), it is like an alternative exit from the function \r\nwhen we did not receive props yet then do not render the page!\r\n- created \"window.store = store\" the object window creates a new variable named store and assign this variable to our store. now we can get to know\r\nwhat our store is from any point of the app!    \r\n\r\nLESSON#58\r\n- we removed mapDispatchToProps function from UsersContainer.js component\r\n- moved all the Action Creators in the object and put it directly in to the context\r\n parameters on the place of mapDispatchToProps.\r\n - we renamed our Action Creators to be able to assign shortly in the object \r\n\r\nLESSON#57  adding preloader gif\r\n- create separate functional component Preloader.jsx which will return image.gif\r\n- create a variable 'isFetching' in users-reducer.js => initial state. set it to boolean true \r\n- create pipeline to change isFetching from true to false and back.\r\n- inside the UsersContainer class in the return of function render. specify ternary expression\r\nisFetching? <Preloader/>:null \r\n- then you have to manipulate isFetching : you have to show the preloader while\r\nserver request is going, and finish showing it, when fetching is finished: it\r\nmeans change isFetching to true before server request and right after you got the\r\nresponse set isFetching to false\r\n\r\n\r\nLESSON# 56\r\n- moved class component to the UsersContainer - now class component will be responsible only for server requests\r\n- created functional component, sent all the props to it, now this functional\r\n component is responsible for returning jsx\r\n\r\nLESSON #55\r\n  -in Users.js => moved axios request from the constructor to componentDidMount(){}, removed constructor\r\n  -users-reducer.js=> added to state variables: pageSize, totalUserCount, currentPage\r\n  -Users-container=> pass new(3) variables to User.js component\r\n  -Users.js => inside the render function before return => calculate how many pages you will need (users/amountUsersPerPage), use Math.ceil() to round the digit to a bigger integer \r\n  -Users.js => inside the render function before return => push all the pages to an array :pagesArray\r\n  -Users.js => inside return => map through the pagesArray and render a span with the page number for each page. also set the className to check if currentPage from state===page from map and set for that page special class to be able to recognize which page is current.\r\n  -Users.js => componentDidMount => change your request from hardcoded to responsive, using your variables: currentPage, pageSize.  for that remember to wrap whole request in the backtick `${variable} text ${variable}`\r\n  - So you have to change the currentPage in the state, clicking on a page number: set an action listener onClick to all <span>page</span> \r\nand make whole pipe line: (onClick=>function in the class=>props.method=>AC=>dispatch)  you have to send clicked page number through all the arguments all the way to state.\r\nimportant: onClick should call to a function in your class: (setCurrentPage), and then that function should call to props.setCurrentPage. you will understand this in the next step.\r\n  -  -Users.js =>setCurrentPage function => copy ajax request in to this function and change EndPoint ?page=${this.curre...} to ?page${page} to received page\r\nwhat you just clicked! \r\nwhy?   because method componentDidMount invokes ONLY ONCE!!! when function is born (there you make your first server request), but when you do some actions \r\non your page you need to rerender it, and for that you will be making request each time we press at another page number, and because this another page we have\r\nonly in received arguments as (page) and our currentPage is not accurate anymore (it is old, and we pressed new page now),  so we will pass the new page to request.\r\n  -users-reducer.js => change SET_USERS dispatch to reassign new users each time.\r\n  -Users.js=> setCurrentPage function => ajax server request=>  dispatch totalUserCount for state (make whole pipeline...), so each time you making \r\n  the request you check the  number of users from response and change your state value \"totalUsersCount\" through dispatch and rerender the page. \r\n\r\n\r\n\r\n\r\nLESSON #53\r\nimplemented first class component to Users.js file and component\r\n*/\r\n\r\n/*\r\nLESSON #51\r\ninstalled axios library: npm install axios --save\r\nimport axios in to users.jsx component\r\nmade first server request with axios.get().then()   at users.jsx component\r\nadd a folder with a picture and imported that picture to users.jsx\r\n*/\r\n\r\n/*lesson#47.1 we removed rerenderEntireTree subscriber function on state change, \r\nand we removed invoking the function rerenderEntireTree. so now we could remove actual function rerenderEntireTree\r\nand live only what was inside it, because only at the start this code will be rendering our app, we do not \r\nneed to call it again.\r\n */","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonError\":\"Login_commonError__2fYc_\",\"loginForm\":\"Login_loginForm__3w69Q\",\"wrapper\":\"Login_wrapper__3UA6A\",\"rememberMe\":\"Login_rememberMe__1oDur\",\"loginButton\":\"Login_loginButton__1OzTX\"};","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport style from './FormControls.module.css'\r\n\r\n\r\n\r\nexport const Input = (props) => {\r\n    let { input, ...otherProps } = props\r\n    return (\r\n        <FormControl {...props}>  <input {...input} {...otherProps}></input>   </FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const TextArea = (props) => {\r\n    let { input, ...otherProps } = props\r\n    return (\r\n        <FormControl {...props}>  <textarea {...input} {...otherProps}></textarea>   </FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst FormControl = (props) => {\r\n\r\n    let {meta, children} = props\r\n    let error = meta.touched && meta.error\r\n    return (\r\n        <div className={`${style.formControle} ${error ? style.error : \"\"}`} >\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {error && <span> {meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} component={component} validate={validators} name={name}   {...props}></Field>\r\n            {text}\r\n        </div>\r\n    )\r\n}","\r\nexport const required =(value)=>{\r\nif (value){return undefined}\r\nreturn \"this field is required\"\r\n}\r\n\r\n\r\nexport const maxChar =(max)=>{\r\n    return(\r\n        (value)=>{\r\n            if(value && value.length > max){return (\"maximum amount of characters is\" + max)}\r\n        }\r\n    )\r\n}","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/api\";\r\nimport {reset} from 'redux-form';\r\n\r\nconst ADD_NEW_POST = \"ADD_NEW_POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst REMOVE_POST = \"REMOVE_POST\"\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\"\r\nconst FETCHING_USER_PICTURE = \"FETCHING_USER_PICTURE\"\r\nconst SET_GLOBAL_ERROR = \"SET_GLOBAL_ERROR\"\r\n\r\n\r\n\r\n\r\n/*#6 create an object to assign launch characteristics for the main state.  this is the way we set up our state when we first time start the app */\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 0, likes: \"10\", message: \"some message\" },\r\n        { id: 1, likes: \"12\", message: \"momolongmo\" },\r\n        { id: 2, likes: \"11\", message: \"some hurucasami\" },\r\n    ],\r\n\r\n\r\n    userProfile: null,\r\n    status: \"\",\r\n    isFetching: false,\r\n    errorFlag:false,\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_NEW_POST:\r\n            return { ...state, postsData: [...state.postsData, { id: state.postsData.length, likes: 5, message: action.text }] };\r\n\r\n        case REMOVE_POST:\r\n            return {\r\n                ...state, postsData: state.postsData.filter(p => p.id !== action.id)\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return { ...state, userProfile: action.userProfile }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userProfile: { ...state.userProfile, photos: action.photos }\r\n            }\r\n\r\n        case FETCHING_USER_PICTURE:\r\n            return {\r\n                ...state,\r\n                isFetching: action.fetch\r\n            }\r\n\r\n        case SET_GLOBAL_ERROR:\r\n            return {\r\n                ...state,\r\n                errorFlag:!state.errorFlag\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const addNewPostCreator = (text) => {\r\n    return {\r\n        type: ADD_NEW_POST,\r\n        text\r\n    }\r\n}\r\n\r\nexport const removePost = (id) => {\r\n    return {\r\n        type: REMOVE_POST,\r\n        id\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (userProfile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        userProfile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\n\r\nexport const savePhotoSuccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n}\r\n\r\n\r\nexport const isFetchingAC = (fetch) => {\r\n    return {\r\n        type: FETCHING_USER_PICTURE,\r\n        fetch\r\n    }\r\n}\r\n\r\n\r\nexport const setGlobalError = ()=>{\r\n    return{\r\n        type:SET_GLOBAL_ERROR\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* thunk */\r\n\r\nexport const addPostAndCleanReduxForm = (text)=>{\r\n    return (dispatch)=>{\r\n        dispatch(addNewPostCreator(text));\r\ndispatch(reset(\"NewPost\"));\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const showGlobalError = ()=>{\r\n    return (dispatch)=>{\r\n        dispatch(setGlobalError());\r\n        setTimeout(()=>{\r\n            dispatch(setGlobalError())\r\n        },3000)\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return (\r\n        (dispatch) => {\r\n            dispatch(isFetchingAC(true))\r\n            profileAPI.getUserProfile(userId).then((data) => {\r\n                dispatch(setUserProfile(data));\r\n                dispatch(isFetchingAC(false));\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const getStatus = (userId) => {\r\n    console.log(\"get status\")\r\n    return (\r\n        (dispatch) => {\r\n            profileAPI.getStatus(userId).then((response) => {\r\n                dispatch(setStatus(response.data));\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const updateStatus = (status) => {\r\n    return (\r\n       async (dispatch) => {\r\n        try{\r\n            let response = await profileAPI.setStatus(status)\r\n                if (response.data.resultCode === 0) { dispatch(setStatus(status)) }\r\n        }\r\n         \r\ncatch(error){alert(error)}\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const savePhoto = (file) => {\r\n    return (async (dispatch) => {\r\n        dispatch(isFetchingAC(true))\r\n        let response = await profileAPI.savePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(isFetchingAC(false))\r\n            dispatch(savePhotoSuccess(response.data.data.photos))\r\n        }\r\n    }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const saveProfile = (profileData) => {\r\n    return (async (dispatch, getState) => {\r\n        let userId = getState().auth.id                                  //! this is the way to get state from another reducer\r\n\r\n        let response = await profileAPI.saveProfile(profileData);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId))                                //! this is the way to call a thunk from a thunk in the same reducer\r\n        }\r\n        else {\r\n            dispatch(stopSubmit(\"profileDataA\", { _error: response.data.messages[0] }));\r\n            return (Promise.reject(response.data.messages[0]))\r\n        }\r\n    }\r\n    )\r\n}\r\n\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/loader.f53aa23f.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__Czo3p\",\"circle\":\"Friend_circle__6OWR1\",\"friends_name\":\"Friend_friends_name__3AmH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2YcOo\",\"header__burger\":\"Header_header__burger__2VL0_\",\"header__burger_active\":\"Header_header__burger_active__36RL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControle\":\"FormControls_formControle__1-oH2\",\"error\":\"FormControls_error__5Wo6Z\",\"commonError\":\"FormControls_commonError__DXeem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__2fQNR\",\"ussers_container\":\"Users_ussers_container__2rWcb\",\"usser_icon\":\"Users_usser_icon__2-8zS\",\"wrapper__for_AspectRatio\":\"Users_wrapper__for_AspectRatio__3og9b\",\"imgAspectRatio_wrapper\":\"Users_imgAspectRatio_wrapper__378m_\",\"img_wrapper\":\"Users_img_wrapper__QxNWj\",\"button_wrapper\":\"Users_button_wrapper__3Hg54\",\"user_info\":\"Users_user_info__2uDWn\",\"name_and_status\":\"Users_name_and_status__1DQgl\",\"country_and_city\":\"Users_country_and_city__34Xb3\",\"name\":\"Users_name___X1FW\",\"status\":\"Users_status__1Cf7r\",\"country\":\"Users_country__3vNC_\",\"city\":\"Users_city__8P_4B\",\"activePage\":\"Users_activePage__1_EKW\",\"pageNumbers\":\"Users_pageNumbers__3Z_rO\",\"buttonNext\":\"Users_buttonNext__2fDn5\",\"buttonPrev\":\"Users_buttonPrev__Rfqtg\"};"],"sourceRoot":""}